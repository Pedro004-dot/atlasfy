/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/evolution/create-instance/route";
exports.ids = ["app/api/evolution/create-instance/route"];
exports.modules = {

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "?32c4":
/*!****************************!*\
  !*** bufferutil (ignored) ***!
  \****************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?66e9":
/*!********************************!*\
  !*** utf-8-validate (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fevolution%2Fcreate-instance%2Froute&page=%2Fapi%2Fevolution%2Fcreate-instance%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fevolution%2Fcreate-instance%2Froute.ts&appDir=%2FUsers%2Fpedrotorrezani%2FDocuments%2FProgramacao%2Fatlas%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fpedrotorrezani%2FDocuments%2FProgramacao%2Fatlas&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fevolution%2Fcreate-instance%2Froute&page=%2Fapi%2Fevolution%2Fcreate-instance%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fevolution%2Fcreate-instance%2Froute.ts&appDir=%2FUsers%2Fpedrotorrezani%2FDocuments%2FProgramacao%2Fatlas%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fpedrotorrezani%2FDocuments%2FProgramacao%2Fatlas&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_pedrotorrezani_Documents_Programacao_atlas_src_app_api_evolution_create_instance_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/evolution/create-instance/route.ts */ \"(rsc)/./src/app/api/evolution/create-instance/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/evolution/create-instance/route\",\n        pathname: \"/api/evolution/create-instance\",\n        filename: \"route\",\n        bundlePath: \"app/api/evolution/create-instance/route\"\n    },\n    resolvedPagePath: \"/Users/pedrotorrezani/Documents/Programacao/atlas/src/app/api/evolution/create-instance/route.ts\",\n    nextConfigOutput,\n    userland: _Users_pedrotorrezani_Documents_Programacao_atlas_src_app_api_evolution_create_instance_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/evolution/create-instance/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZldm9sdXRpb24lMkZjcmVhdGUtaW5zdGFuY2UlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmV2b2x1dGlvbiUyRmNyZWF0ZS1pbnN0YW5jZSUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmV2b2x1dGlvbiUyRmNyZWF0ZS1pbnN0YW5jZSUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnBlZHJvdG9ycmV6YW5pJTJGRG9jdW1lbnRzJTJGUHJvZ3JhbWFjYW8lMkZhdGxhcyUyRnNyYyUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZwZWRyb3RvcnJlemFuaSUyRkRvY3VtZW50cyUyRlByb2dyYW1hY2FvJTJGYXRsYXMmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ2dEO0FBQzdIO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYXRsYXMtYXV0aC8/OGE2MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvcGVkcm90b3JyZXphbmkvRG9jdW1lbnRzL1Byb2dyYW1hY2FvL2F0bGFzL3NyYy9hcHAvYXBpL2V2b2x1dGlvbi9jcmVhdGUtaW5zdGFuY2Uvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2V2b2x1dGlvbi9jcmVhdGUtaW5zdGFuY2Uvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9ldm9sdXRpb24vY3JlYXRlLWluc3RhbmNlXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9ldm9sdXRpb24vY3JlYXRlLWluc3RhbmNlL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL3BlZHJvdG9ycmV6YW5pL0RvY3VtZW50cy9Qcm9ncmFtYWNhby9hdGxhcy9zcmMvYXBwL2FwaS9ldm9sdXRpb24vY3JlYXRlLWluc3RhbmNlL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9ldm9sdXRpb24vY3JlYXRlLWluc3RhbmNlL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fevolution%2Fcreate-instance%2Froute&page=%2Fapi%2Fevolution%2Fcreate-instance%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fevolution%2Fcreate-instance%2Froute.ts&appDir=%2FUsers%2Fpedrotorrezani%2FDocuments%2FProgramacao%2Fatlas%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fpedrotorrezani%2FDocuments%2FProgramacao%2Fatlas&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/evolution/create-instance/route.ts":
/*!********************************************************!*\
  !*** ./src/app/api/evolution/create-instance/route.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/auth */ \"(rsc)/./src/lib/auth.ts\");\n/* harmony import */ var _services_whatsapp_connection_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/services/whatsapp-connection.service */ \"(rsc)/./src/services/whatsapp-connection.service.ts\");\n\n\n\nasync function POST(request) {\n    try {\n        // Verificar autenticação\n        const authorization = request.headers.get(\"authorization\");\n        if (!authorization?.startsWith(\"Bearer \")) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Token n\\xe3o fornecido\"\n            }, {\n                status: 401\n            });\n        }\n        const token = authorization.split(\" \")[1];\n        const { userId } = await (0,_lib_auth__WEBPACK_IMPORTED_MODULE_1__.verifyJWT)(token);\n        // Parse do body\n        const body = await request.json();\n        const { instanceName, agentId, agentType } = body;\n        if (!instanceName) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Nome da inst\\xe2ncia \\xe9 obrigat\\xf3rio\"\n            }, {\n                status: 400\n            });\n        }\n        if (!agentType) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Tipo de agente \\xe9 obrigat\\xf3rio\"\n            }, {\n                status: 400\n            });\n        }\n        // Log para debug\n        console.log(\"Request body parsed:\", {\n            instanceName,\n            agentId,\n            agentType\n        });\n        console.log(\"User ID from token:\", userId);\n        // Verificar se as variáveis de ambiente estão configuradas\n        const evolutionApiUrl = process.env.EVOLUTION_API_URL;\n        const evolutionApiKey = process.env.EVOLUTION_API_KEY;\n        if (!evolutionApiUrl || !evolutionApiKey) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Configura\\xe7\\xe3o da Evolution API n\\xe3o encontrada\"\n            }, {\n                status: 500\n            });\n        }\n        // Chamar o service para criar a instância Evolution (ajustar para usar agentType)\n        console.log(\"Creating WhatsApp connection service...\");\n        const service = (0,_services_whatsapp_connection_service__WEBPACK_IMPORTED_MODULE_2__.createWhatsAppConnectionService)();\n        console.log(\"Calling initiateEvolutionInstance with:\", {\n            instanceName,\n            userId,\n            agentId,\n            agentType\n        });\n        const result = await service.initiateEvolutionInstance(instanceName, userId, agentId, agentType);\n        if (!result.success) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: result.error,\n                message: result.message\n            }, {\n                status: 400\n            });\n        }\n        console.log(\"Service Result:\", result.success ? \"SUCCESS\" : \"FAILED\");\n        if (result.success) {\n            console.log(\"QR Code generated:\", !!result.data?.qr_code);\n        }\n        // Retornar os dados diretamente do service\n        const responseData = {\n            connectionId: result.data?.id,\n            instanceName: result.data?.instance_name,\n            instanceId: result.data?.evolution_instance_data?.instanceName,\n            hash: result.data?.evolution_instance_data?.apikey,\n            status: result.data?.status,\n            qrCode: result.data?.qr_code,\n            expiresAt: result.data?.expires_at,\n            evolutionApiResponse: result.data?.evolution_instance_data\n        };\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: responseData\n        });\n    } catch (error) {\n        console.error(\"Error creating Evolution API instance:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Erro interno do servidor\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/evolution/create-instance/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/auth.ts":
/*!*************************!*\
  !*** ./src/lib/auth.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCurrentUser: () => (/* binding */ getCurrentUser),\n/* harmony export */   isAuthenticated: () => (/* binding */ isAuthenticated),\n/* harmony export */   removeAuthCookie: () => (/* binding */ removeAuthCookie),\n/* harmony export */   requireAuth: () => (/* binding */ requireAuth),\n/* harmony export */   setAuthCookie: () => (/* binding */ setAuthCookie),\n/* harmony export */   verifyJWT: () => (/* binding */ verifyJWT)\n/* harmony export */ });\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/dist/api/headers.js\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jsonwebtoken */ \"(rsc)/./node_modules/jsonwebtoken/index.js\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _repositories_user_repository__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/repositories/user.repository */ \"(rsc)/./src/repositories/user.repository.ts\");\n\n\n\nasync function getCurrentUser() {\n    try {\n        const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_0__.cookies)();\n        const token = cookieStore.get(\"auth-token\")?.value;\n        if (!token) {\n            return null;\n        }\n        const jwtSecret = \"ylewgpweougwepygweoigfwapefygweupfo9ig7wrqoFELDGSAYQWQO\";\n        if (!jwtSecret) {\n            return null;\n        }\n        const payload = jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().verify(token, jwtSecret);\n        if (!payload?.userId) {\n            return null;\n        }\n        const user = await _repositories_user_repository__WEBPACK_IMPORTED_MODULE_2__.userRepository.findById(payload.userId);\n        if (!user || !user.ativo || !user.email_verificado) {\n            return null;\n        }\n        return user;\n    } catch (error) {\n        console.error(\"Erro ao obter usu\\xe1rio atual:\", error);\n        return null;\n    }\n}\nasync function isAuthenticated() {\n    const user = await getCurrentUser();\n    return !!user;\n}\nasync function requireAuth() {\n    const user = await getCurrentUser();\n    if (!user) {\n        throw new Error(\"Usu\\xe1rio n\\xe3o autenticado\");\n    }\n    return user;\n}\nasync function setAuthCookie(token) {\n    const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_0__.cookies)();\n    cookieStore.set(\"auth-token\", token, {\n        httpOnly: true,\n        secure: \"development\" === \"production\",\n        sameSite: \"strict\",\n        maxAge: 60 * 60 * 24\n    });\n}\nasync function removeAuthCookie() {\n    const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_0__.cookies)();\n    cookieStore.delete(\"auth-token\");\n}\nfunction verifyJWT(token) {\n    const jwtSecret = \"ylewgpweougwepygweoigfwapefygweupfo9ig7wrqoFELDGSAYQWQO\";\n    if (!jwtSecret) {\n        throw new Error(\"JWT_SECRET n\\xe3o configurado\");\n    }\n    try {\n        const payload = jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().verify(token, jwtSecret);\n        if (!payload?.userId || !payload?.email) {\n            throw new Error(\"Token inv\\xe1lido\");\n        }\n        return {\n            userId: payload.userId,\n            email: payload.email\n        };\n    } catch (error) {\n        throw new Error(\"Token inv\\xe1lido ou expirado\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2F1dGgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUF1QztBQUNSO0FBQ2lDO0FBR3pELGVBQWVHO0lBQ3BCLElBQUk7UUFDRixNQUFNQyxjQUFjLE1BQU1KLHFEQUFPQTtRQUNqQyxNQUFNSyxRQUFRRCxZQUFZRSxHQUFHLENBQUMsZUFBZUM7UUFFN0MsSUFBSSxDQUFDRixPQUFPO1lBQ1YsT0FBTztRQUNUO1FBRUEsTUFBTUcsWUFBWUMseURBQXNCO1FBQ3hDLElBQUksQ0FBQ0QsV0FBVztZQUNkLE9BQU87UUFDVDtRQUVBLE1BQU1JLFVBQVVYLDBEQUFVLENBQUNJLE9BQU9HO1FBRWxDLElBQUksQ0FBQ0ksU0FBU0UsUUFBUTtZQUNwQixPQUFPO1FBQ1Q7UUFFQSxNQUFNQyxPQUFPLE1BQU1iLHlFQUFjQSxDQUFDYyxRQUFRLENBQUNKLFFBQVFFLE1BQU07UUFFekQsSUFBSSxDQUFDQyxRQUFRLENBQUNBLEtBQUtFLEtBQUssSUFBSSxDQUFDRixLQUFLRyxnQkFBZ0IsRUFBRTtZQUNsRCxPQUFPO1FBQ1Q7UUFFQSxPQUFPSDtJQUNULEVBQUUsT0FBT0ksT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsbUNBQWdDQTtRQUM5QyxPQUFPO0lBQ1Q7QUFDRjtBQUVPLGVBQWVFO0lBQ3BCLE1BQU1OLE9BQU8sTUFBTVo7SUFDbkIsT0FBTyxDQUFDLENBQUNZO0FBQ1g7QUFFTyxlQUFlTztJQUNwQixNQUFNUCxPQUFPLE1BQU1aO0lBRW5CLElBQUksQ0FBQ1ksTUFBTTtRQUNULE1BQU0sSUFBSVEsTUFBTTtJQUNsQjtJQUVBLE9BQU9SO0FBQ1Q7QUFFTyxlQUFlUyxjQUFjbkIsS0FBYTtJQUMvQyxNQUFNRCxjQUFjLE1BQU1KLHFEQUFPQTtJQUNqQ0ksWUFBWXFCLEdBQUcsQ0FBQyxjQUFjcEIsT0FBTztRQUNuQ3FCLFVBQVU7UUFDVkMsUUFBUWxCLGtCQUF5QjtRQUNqQ21CLFVBQVU7UUFDVkMsUUFBUSxLQUFLLEtBQUs7SUFDcEI7QUFDRjtBQUVPLGVBQWVDO0lBQ3BCLE1BQU0xQixjQUFjLE1BQU1KLHFEQUFPQTtJQUNqQ0ksWUFBWTJCLE1BQU0sQ0FBQztBQUNyQjtBQUVPLFNBQVNDLFVBQVUzQixLQUFhO0lBQ3JDLE1BQU1HLFlBQVlDLHlEQUFzQjtJQUN4QyxJQUFJLENBQUNELFdBQVc7UUFDZCxNQUFNLElBQUllLE1BQU07SUFDbEI7SUFFQSxJQUFJO1FBQ0YsTUFBTVgsVUFBVVgsMERBQVUsQ0FBQ0ksT0FBT0c7UUFFbEMsSUFBSSxDQUFDSSxTQUFTRSxVQUFVLENBQUNGLFNBQVNxQixPQUFPO1lBQ3ZDLE1BQU0sSUFBSVYsTUFBTTtRQUNsQjtRQUVBLE9BQU87WUFDTFQsUUFBUUYsUUFBUUUsTUFBTTtZQUN0Qm1CLE9BQU9yQixRQUFRcUIsS0FBSztRQUN0QjtJQUNGLEVBQUUsT0FBT2QsT0FBTztRQUNkLE1BQU0sSUFBSUksTUFBTTtJQUNsQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYXRsYXMtYXV0aC8uL3NyYy9saWIvYXV0aC50cz82NjkyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvb2tpZXMgfSBmcm9tICduZXh0L2hlYWRlcnMnO1xuaW1wb3J0IGp3dCBmcm9tICdqc29ud2VidG9rZW4nO1xuaW1wb3J0IHsgdXNlclJlcG9zaXRvcnkgfSBmcm9tICdAL3JlcG9zaXRvcmllcy91c2VyLnJlcG9zaXRvcnknO1xuaW1wb3J0IHsgVXNlciB9IGZyb20gJ0AvdHlwZXMnO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0Q3VycmVudFVzZXIoKTogUHJvbWlzZTxVc2VyIHwgbnVsbD4ge1xuICB0cnkge1xuICAgIGNvbnN0IGNvb2tpZVN0b3JlID0gYXdhaXQgY29va2llcygpO1xuICAgIGNvbnN0IHRva2VuID0gY29va2llU3RvcmUuZ2V0KCdhdXRoLXRva2VuJyk/LnZhbHVlO1xuXG4gICAgaWYgKCF0b2tlbikge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgY29uc3Qgand0U2VjcmV0ID0gcHJvY2Vzcy5lbnYuSldUX1NFQ1JFVDtcbiAgICBpZiAoIWp3dFNlY3JldCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgY29uc3QgcGF5bG9hZCA9IGp3dC52ZXJpZnkodG9rZW4sIGp3dFNlY3JldCkgYXMgYW55O1xuICAgIFxuICAgIGlmICghcGF5bG9hZD8udXNlcklkKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBjb25zdCB1c2VyID0gYXdhaXQgdXNlclJlcG9zaXRvcnkuZmluZEJ5SWQocGF5bG9hZC51c2VySWQpO1xuICAgIFxuICAgIGlmICghdXNlciB8fCAhdXNlci5hdGl2byB8fCAhdXNlci5lbWFpbF92ZXJpZmljYWRvKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICByZXR1cm4gdXNlcjtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvIGFvIG9idGVyIHVzdcOhcmlvIGF0dWFsOicsIGVycm9yKTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaXNBdXRoZW50aWNhdGVkKCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICBjb25zdCB1c2VyID0gYXdhaXQgZ2V0Q3VycmVudFVzZXIoKTtcbiAgcmV0dXJuICEhdXNlcjtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJlcXVpcmVBdXRoKCk6IFByb21pc2U8VXNlcj4ge1xuICBjb25zdCB1c2VyID0gYXdhaXQgZ2V0Q3VycmVudFVzZXIoKTtcbiAgXG4gIGlmICghdXNlcikge1xuICAgIHRocm93IG5ldyBFcnJvcignVXN1w6FyaW8gbsOjbyBhdXRlbnRpY2FkbycpO1xuICB9XG5cbiAgcmV0dXJuIHVzZXI7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzZXRBdXRoQ29va2llKHRva2VuOiBzdHJpbmcpIHtcbiAgY29uc3QgY29va2llU3RvcmUgPSBhd2FpdCBjb29raWVzKCk7XG4gIGNvb2tpZVN0b3JlLnNldCgnYXV0aC10b2tlbicsIHRva2VuLCB7XG4gICAgaHR0cE9ubHk6IHRydWUsXG4gICAgc2VjdXJlOiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nLFxuICAgIHNhbWVTaXRlOiAnc3RyaWN0JyxcbiAgICBtYXhBZ2U6IDYwICogNjAgKiAyNCwgLy8gMjQgaG9yYXNcbiAgfSk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiByZW1vdmVBdXRoQ29va2llKCkge1xuICBjb25zdCBjb29raWVTdG9yZSA9IGF3YWl0IGNvb2tpZXMoKTtcbiAgY29va2llU3RvcmUuZGVsZXRlKCdhdXRoLXRva2VuJyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB2ZXJpZnlKV1QodG9rZW46IHN0cmluZyk6IHsgdXNlcklkOiBzdHJpbmc7IGVtYWlsOiBzdHJpbmcgfSB7XG4gIGNvbnN0IGp3dFNlY3JldCA9IHByb2Nlc3MuZW52LkpXVF9TRUNSRVQ7XG4gIGlmICghand0U2VjcmV0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdKV1RfU0VDUkVUIG7Do28gY29uZmlndXJhZG8nKTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgY29uc3QgcGF5bG9hZCA9IGp3dC52ZXJpZnkodG9rZW4sIGp3dFNlY3JldCkgYXMgYW55O1xuICAgIFxuICAgIGlmICghcGF5bG9hZD8udXNlcklkIHx8ICFwYXlsb2FkPy5lbWFpbCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdUb2tlbiBpbnbDoWxpZG8nKTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgdXNlcklkOiBwYXlsb2FkLnVzZXJJZCxcbiAgICAgIGVtYWlsOiBwYXlsb2FkLmVtYWlsXG4gICAgfTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1Rva2VuIGludsOhbGlkbyBvdSBleHBpcmFkbycpO1xuICB9XG59Il0sIm5hbWVzIjpbImNvb2tpZXMiLCJqd3QiLCJ1c2VyUmVwb3NpdG9yeSIsImdldEN1cnJlbnRVc2VyIiwiY29va2llU3RvcmUiLCJ0b2tlbiIsImdldCIsInZhbHVlIiwiand0U2VjcmV0IiwicHJvY2VzcyIsImVudiIsIkpXVF9TRUNSRVQiLCJwYXlsb2FkIiwidmVyaWZ5IiwidXNlcklkIiwidXNlciIsImZpbmRCeUlkIiwiYXRpdm8iLCJlbWFpbF92ZXJpZmljYWRvIiwiZXJyb3IiLCJjb25zb2xlIiwiaXNBdXRoZW50aWNhdGVkIiwicmVxdWlyZUF1dGgiLCJFcnJvciIsInNldEF1dGhDb29raWUiLCJzZXQiLCJodHRwT25seSIsInNlY3VyZSIsInNhbWVTaXRlIiwibWF4QWdlIiwicmVtb3ZlQXV0aENvb2tpZSIsImRlbGV0ZSIsInZlcmlmeUpXVCIsImVtYWlsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/auth.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/database.ts":
/*!*****************************!*\
  !*** ./src/lib/database.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   databaseService: () => (/* binding */ databaseService)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nconst supabaseUrl = \"https://bxhgjurnibfcbcxqxmsb.supabase.co\";\nconst supabaseServiceKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJ4aGdqdXJuaWJmY2JjeHF4bXNiIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MTM4MTQzMCwiZXhwIjoyMDY2OTU3NDMwfQ.ISSpFu9T01tI4EWIAbgNrjhr6sYnQbjrHliW7d1XrMA\";\nclass DatabaseService {\n    constructor(){\n        this.supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseServiceKey, {\n            auth: {\n                autoRefreshToken: false,\n                persistSession: false\n            }\n        });\n    }\n    async query(text, params) {\n        try {\n            const { data, error } = await this.supabase.rpc(\"execute_sql\", {\n                query: text,\n                parameters: params || []\n            });\n            if (error) {\n                throw new Error(`Database query error: ${error.message}`);\n            }\n            return data || [];\n        } catch (error) {\n            console.error(\"Database query error:\", error);\n            throw error;\n        }\n    }\n    async queryOne(text, params) {\n        const results = await this.query(text, params);\n        return results.length > 0 ? results[0] : null;\n    }\n    async transaction(callback) {\n        return callback(this.supabase);\n    }\n    getClient() {\n        return this.supabase;\n    }\n}\nconst databaseService = new DatabaseService();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2RhdGFiYXNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXFEO0FBR3JELE1BQU1DLGNBQWNDLDBDQUF3QjtBQUM1QyxNQUFNRyxxQkFBcUJILDZOQUFxQztBQUVoRSxNQUFNSztJQUdKQyxhQUFjO1FBQ1osSUFBSSxDQUFDQyxRQUFRLEdBQUdULG1FQUFZQSxDQUFDQyxhQUFhSSxvQkFBb0I7WUFDNURLLE1BQU07Z0JBQ0pDLGtCQUFrQjtnQkFDbEJDLGdCQUFnQjtZQUNsQjtRQUNGO0lBQ0Y7SUFHQSxNQUFNQyxNQUFTQyxJQUFZLEVBQUVDLE1BQWMsRUFBZ0I7UUFDekQsSUFBSTtZQUNGLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxLQUFLLEVBQUUsR0FBRyxNQUFNLElBQUksQ0FBQ1IsUUFBUSxDQUFDUyxHQUFHLENBQUMsZUFBZTtnQkFDN0RMLE9BQU9DO2dCQUNQSyxZQUFZSixVQUFVLEVBQUU7WUFDMUI7WUFFQSxJQUFJRSxPQUFPO2dCQUNULE1BQU0sSUFBSUcsTUFBTSxDQUFDLHNCQUFzQixFQUFFSCxNQUFNSSxPQUFPLENBQUMsQ0FBQztZQUMxRDtZQUVBLE9BQU9MLFFBQVEsRUFBRTtRQUNuQixFQUFFLE9BQU9DLE9BQU87WUFDZEssUUFBUUwsS0FBSyxDQUFDLHlCQUF5QkE7WUFDdkMsTUFBTUE7UUFDUjtJQUNGO0lBRUEsTUFBTU0sU0FBWVQsSUFBWSxFQUFFQyxNQUFjLEVBQXFCO1FBQ2pFLE1BQU1TLFVBQVUsTUFBTSxJQUFJLENBQUNYLEtBQUssQ0FBSUMsTUFBTUM7UUFDMUMsT0FBT1MsUUFBUUMsTUFBTSxHQUFHLElBQUlELE9BQU8sQ0FBQyxFQUFFLEdBQUc7SUFDM0M7SUFFQSxNQUFNRSxZQUFlQyxRQUFxQyxFQUFjO1FBQ3RFLE9BQU9BLFNBQVMsSUFBSSxDQUFDbEIsUUFBUTtJQUMvQjtJQUVBbUIsWUFBWTtRQUNWLE9BQU8sSUFBSSxDQUFDbkIsUUFBUTtJQUN0QjtBQUNGO0FBRU8sTUFBTW9CLGtCQUFrQixJQUFJdEIsa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYXRsYXMtYXV0aC8uL3NyYy9saWIvZGF0YWJhc2UudHM/YzFiMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tICdAc3VwYWJhc2Uvc3VwYWJhc2UtanMnO1xuaW1wb3J0IHsgSURhdGFiYXNlU2VydmljZSB9IGZyb20gJ0AvdHlwZXMvc2VydmljZXMnO1xuXG5jb25zdCBzdXBhYmFzZVVybCA9IHByb2Nlc3MuZW52LlNVUEFCQVNFX1VSTCE7XG5jb25zdCBzdXBhYmFzZVNlcnZpY2VLZXkgPSBwcm9jZXNzLmVudi5TVVBBQkFTRV9TRVJWSUNFX1JPTEVfS0VZITtcblxuY2xhc3MgRGF0YWJhc2VTZXJ2aWNlIGltcGxlbWVudHMgSURhdGFiYXNlU2VydmljZSB7XG4gIHByaXZhdGUgc3VwYWJhc2U7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5zdXBhYmFzZSA9IGNyZWF0ZUNsaWVudChzdXBhYmFzZVVybCwgc3VwYWJhc2VTZXJ2aWNlS2V5LCB7XG4gICAgICBhdXRoOiB7XG4gICAgICAgIGF1dG9SZWZyZXNoVG9rZW46IGZhbHNlLFxuICAgICAgICBwZXJzaXN0U2Vzc2lvbjogZmFsc2VcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG5cbiAgYXN5bmMgcXVlcnk8VD4odGV4dDogc3RyaW5nLCBwYXJhbXM/OiBhbnlbXSk6IFByb21pc2U8VFtdPiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHRoaXMuc3VwYWJhc2UucnBjKCdleGVjdXRlX3NxbCcsIHtcbiAgICAgICAgcXVlcnk6IHRleHQsXG4gICAgICAgIHBhcmFtZXRlcnM6IHBhcmFtcyB8fCBbXVxuICAgICAgfSk7XG5cbiAgICAgIGlmIChlcnJvcikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYERhdGFiYXNlIHF1ZXJ5IGVycm9yOiAke2Vycm9yLm1lc3NhZ2V9YCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBkYXRhIHx8IFtdO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdEYXRhYmFzZSBxdWVyeSBlcnJvcjonLCBlcnJvcik7XG4gICAgICB0aHJvdyBlcnJvcjtcbiAgICB9XG4gIH1cblxuICBhc3luYyBxdWVyeU9uZTxUPih0ZXh0OiBzdHJpbmcsIHBhcmFtcz86IGFueVtdKTogUHJvbWlzZTxUIHwgbnVsbD4ge1xuICAgIGNvbnN0IHJlc3VsdHMgPSBhd2FpdCB0aGlzLnF1ZXJ5PFQ+KHRleHQsIHBhcmFtcyk7XG4gICAgcmV0dXJuIHJlc3VsdHMubGVuZ3RoID4gMCA/IHJlc3VsdHNbMF0gOiBudWxsO1xuICB9XG5cbiAgYXN5bmMgdHJhbnNhY3Rpb248VD4oY2FsbGJhY2s6IChjbGllbnQ6IGFueSkgPT4gUHJvbWlzZTxUPik6IFByb21pc2U8VD4ge1xuICAgIHJldHVybiBjYWxsYmFjayh0aGlzLnN1cGFiYXNlKTtcbiAgfVxuXG4gIGdldENsaWVudCgpIHtcbiAgICByZXR1cm4gdGhpcy5zdXBhYmFzZTtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgZGF0YWJhc2VTZXJ2aWNlID0gbmV3IERhdGFiYXNlU2VydmljZSgpOyJdLCJuYW1lcyI6WyJjcmVhdGVDbGllbnQiLCJzdXBhYmFzZVVybCIsInByb2Nlc3MiLCJlbnYiLCJTVVBBQkFTRV9VUkwiLCJzdXBhYmFzZVNlcnZpY2VLZXkiLCJTVVBBQkFTRV9TRVJWSUNFX1JPTEVfS0VZIiwiRGF0YWJhc2VTZXJ2aWNlIiwiY29uc3RydWN0b3IiLCJzdXBhYmFzZSIsImF1dGgiLCJhdXRvUmVmcmVzaFRva2VuIiwicGVyc2lzdFNlc3Npb24iLCJxdWVyeSIsInRleHQiLCJwYXJhbXMiLCJkYXRhIiwiZXJyb3IiLCJycGMiLCJwYXJhbWV0ZXJzIiwiRXJyb3IiLCJtZXNzYWdlIiwiY29uc29sZSIsInF1ZXJ5T25lIiwicmVzdWx0cyIsImxlbmd0aCIsInRyYW5zYWN0aW9uIiwiY2FsbGJhY2siLCJnZXRDbGllbnQiLCJkYXRhYmFzZVNlcnZpY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/database.ts\n");

/***/ }),

/***/ "(rsc)/./src/repositories/user.repository.ts":
/*!*********************************************!*\
  !*** ./src/repositories/user.repository.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UserRepository: () => (/* binding */ UserRepository),\n/* harmony export */   userRepository: () => (/* binding */ userRepository)\n/* harmony export */ });\n/* harmony import */ var _lib_database__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/database */ \"(rsc)/./src/lib/database.ts\");\n\nclass UserRepository {\n    async create(data) {\n        const supabase = _lib_database__WEBPACK_IMPORTED_MODULE_0__.databaseService.getClient();\n        const { data: user, error } = await supabase.from(\"usuario\").insert([\n            {\n                nome: data.nome,\n                email: data.email,\n                senha_hash: data.senha_hash,\n                email_verificado: false,\n                ativo: true\n            }\n        ]).select().single();\n        if (error) {\n            throw new Error(`Erro ao criar usuário: ${error.message}`);\n        }\n        return user;\n    }\n    async findByEmail(email) {\n        const supabase = _lib_database__WEBPACK_IMPORTED_MODULE_0__.databaseService.getClient();\n        const { data: user, error } = await supabase.from(\"usuario\").select(\"*\").eq(\"email\", email).single();\n        if (error && error.code !== \"PGRST116\") {\n            throw new Error(`Erro ao buscar usuário: ${error.message}`);\n        }\n        return user || null;\n    }\n    async findById(id) {\n        const supabase = _lib_database__WEBPACK_IMPORTED_MODULE_0__.databaseService.getClient();\n        const { data: user, error } = await supabase.from(\"usuario\").select(\"*\").eq(\"id\", id).single();\n        if (error && error.code !== \"PGRST116\") {\n            throw new Error(`Erro ao buscar usuário: ${error.message}`);\n        }\n        return user || null;\n    }\n    async update(id, data) {\n        const supabase = _lib_database__WEBPACK_IMPORTED_MODULE_0__.databaseService.getClient();\n        const { data: user, error } = await supabase.from(\"usuario\").update({\n            ...data,\n            updated_at: new Date().toISOString()\n        }).eq(\"id\", id).select().single();\n        if (error) {\n            throw new Error(`Erro ao atualizar usuário: ${error.message}`);\n        }\n        return user;\n    }\n    async updatePassword(id, senha_hash) {\n        const supabase = _lib_database__WEBPACK_IMPORTED_MODULE_0__.databaseService.getClient();\n        const { error } = await supabase.from(\"usuario\").update({\n            senha_hash,\n            updated_at: new Date().toISOString()\n        }).eq(\"id\", id);\n        if (error) {\n            throw new Error(`Erro ao atualizar senha: ${error.message}`);\n        }\n    }\n    async verifyEmail(id) {\n        const supabase = _lib_database__WEBPACK_IMPORTED_MODULE_0__.databaseService.getClient();\n        const { error } = await supabase.from(\"usuario\").update({\n            email_verificado: true,\n            updated_at: new Date().toISOString()\n        }).eq(\"id\", id);\n        if (error) {\n            throw new Error(`Erro ao verificar email: ${error.message}`);\n        }\n    }\n    async updateLastAccess(id) {\n        const supabase = _lib_database__WEBPACK_IMPORTED_MODULE_0__.databaseService.getClient();\n        const { error } = await supabase.from(\"usuario\").update({\n            ultimo_acesso: new Date().toISOString(),\n            updated_at: new Date().toISOString()\n        }).eq(\"id\", id);\n        if (error) {\n            throw new Error(`Erro ao atualizar último acesso: ${error.message}`);\n        }\n    }\n    async setTrialPeriod(id) {\n        const supabase = _lib_database__WEBPACK_IMPORTED_MODULE_0__.databaseService.getClient();\n        const dataInicio = new Date();\n        const dataFim = new Date();\n        dataFim.setDate(dataFim.getDate() + 7);\n        const { error } = await supabase.from(\"usuario\").update({\n            data_inicio_plano: dataInicio.toISOString(),\n            data_fim_plano: dataFim.toISOString(),\n            updated_at: new Date().toISOString()\n        }).eq(\"id\", id);\n        if (error) {\n            throw new Error(`Erro ao definir período de trial: ${error.message}`);\n        }\n    }\n    async updateProfile(id, data) {\n        const supabase = _lib_database__WEBPACK_IMPORTED_MODULE_0__.databaseService.getClient();\n        const { data: user, error } = await supabase.from(\"usuario\").update({\n            ...data,\n            updated_at: new Date().toISOString()\n        }).eq(\"id\", id).select().single();\n        if (error) {\n            throw new Error(`Erro ao atualizar perfil: ${error.message}`);\n        }\n        return user;\n    }\n    async completeProfile(id, profileData) {\n        const supabase = _lib_database__WEBPACK_IMPORTED_MODULE_0__.databaseService.getClient();\n        const { data: user, error } = await supabase.from(\"usuario\").update({\n            ...profileData,\n            perfil_completo: true,\n            updated_at: new Date().toISOString()\n        }).eq(\"id\", id).select().single();\n        if (error) {\n            throw new Error(`Erro ao completar perfil: ${error.message}`);\n        }\n        return user;\n    }\n    async checkProfileComplete(id) {\n        const supabase = _lib_database__WEBPACK_IMPORTED_MODULE_0__.databaseService.getClient();\n        const { data: user, error } = await supabase.from(\"usuario\").select(\"perfil_completo\").eq(\"id\", id).single();\n        if (error) {\n            throw new Error(`Erro ao verificar perfil: ${error.message}`);\n        }\n        return user?.perfil_completo || false;\n    }\n    async setBankingAccountId(id, bankingAccountId) {\n        const supabase = _lib_database__WEBPACK_IMPORTED_MODULE_0__.databaseService.getClient();\n        const { error } = await supabase.from(\"usuario\").update({\n            conta_bancaria_id: bankingAccountId,\n            updated_at: new Date().toISOString()\n        }).eq(\"id\", id);\n        if (error) {\n            throw new Error(`Erro ao definir conta bancária: ${error.message}`);\n        }\n    }\n}\nconst userRepository = new UserRepository();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/repositories/user.repository.ts\n");

/***/ }),

/***/ "(rsc)/./src/repositories/whatsapp-connection.repository.ts":
/*!************************************************************!*\
  !*** ./src/repositories/whatsapp-connection.repository.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WhatsAppConnectionRepository: () => (/* binding */ WhatsAppConnectionRepository)\n/* harmony export */ });\n/* harmony import */ var _lib_database__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/database */ \"(rsc)/./src/lib/database.ts\");\n\nclass WhatsAppConnectionRepository {\n    /**\n   * Validates if a string is a valid UUID format\n   */ isValidUUID(str) {\n        const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n        return uuidRegex.test(str);\n    }\n    async create(data) {\n        console.log(\"=== Repository: create ===\");\n        console.log(\"Create data:\", data);\n        const supabase = _lib_database__WEBPACK_IMPORTED_MODULE_0__.databaseService.getClient();\n        // Validate agent_id - only use if it's a valid UUID, otherwise set to null\n        const validAgentId = data.agent_id && this.isValidUUID(data.agent_id) ? data.agent_id : null;\n        console.log(\"Agent ID validation:\", {\n            original: data.agent_id,\n            isValid: data.agent_id ? this.isValidUUID(data.agent_id) : false,\n            final: validAgentId\n        });\n        const insertData = {\n            user_id: data.user_id,\n            instance_name: data.instance_name,\n            agent_id: validAgentId,\n            webhook_url: data.webhook_url,\n            status: \"pending\",\n            connection_attempts: 0,\n            expires_at: new Date(Date.now() + 10 * 60 * 1000).toISOString()\n        };\n        console.log(\"Insert data:\", insertData);\n        const { data: connection, error } = await supabase.from(\"whatsapp_connections\").insert([\n            insertData\n        ]).select(`\n        *,\n        agente:agent_id (\n          id,\n          nome,\n          genero,\n          personalidade,\n          empresa_id,\n          ativo,\n          whatsapp_conectado,\n          whatsapp_numero,\n          fluxo_conversa,\n          created_at,\n          updated_at\n        )\n      `).single();\n        console.log(\"Database result:\", {\n            connection,\n            error\n        });\n        if (error) {\n            console.error(\"Database error:\", error);\n            throw new Error(`Erro ao criar conexão WhatsApp: ${error.message}`);\n        }\n        console.log(\"Connection created successfully:\", connection);\n        return connection;\n    }\n    async findById(id) {\n        const supabase = _lib_database__WEBPACK_IMPORTED_MODULE_0__.databaseService.getClient();\n        const { data: connection, error } = await supabase.from(\"whatsapp_connections\").select(`\n        *,\n        agente:agent_id (\n          id,\n          nome,\n          genero,\n          personalidade,\n          empresa_id,\n          ativo,\n          whatsapp_conectado,\n          whatsapp_numero,\n          fluxo_conversa,\n          created_at,\n          updated_at\n        )\n      `).eq(\"id\", id).single();\n        if (error && error.code !== \"PGRST116\") {\n            throw new Error(`Erro ao buscar conexão WhatsApp: ${error.message}`);\n        }\n        return connection || null;\n    }\n    async findByInstanceName(instanceName) {\n        const supabase = _lib_database__WEBPACK_IMPORTED_MODULE_0__.databaseService.getClient();\n        const { data: connection, error } = await supabase.from(\"whatsapp_connections\").select(`\n        *,\n        agente:agent_id (\n          id,\n          nome,\n          genero,\n          personalidade,\n          empresa_id,\n          ativo,\n          whatsapp_conectado,\n          whatsapp_numero,\n          fluxo_conversa,\n          created_at,\n          updated_at\n        )\n      `).eq(\"instance_name\", instanceName).single();\n        if (error && error.code !== \"PGRST116\") {\n            throw new Error(`Erro ao buscar conexão WhatsApp: ${error.message}`);\n        }\n        return connection || null;\n    }\n    async findByUserId(userId) {\n        const supabase = _lib_database__WEBPACK_IMPORTED_MODULE_0__.databaseService.getClient();\n        const { data: connections, error } = await supabase.from(\"whatsapp_connections\").select(`\n        *,\n        agente:agent_id (\n          id,\n          nome,\n          genero,\n          personalidade,\n          empresa_id,\n          ativo,\n          whatsapp_conectado,\n          whatsapp_numero,\n          fluxo_conversa,\n          created_at,\n          updated_at\n        )\n      `).eq(\"user_id\", userId).order(\"created_at\", {\n            ascending: false\n        });\n        if (error) {\n            throw new Error(`Erro ao buscar conexões WhatsApp do usuário: ${error.message}`);\n        }\n        return connections || [];\n    }\n    async findByAgentId(agentId) {\n        const supabase = _lib_database__WEBPACK_IMPORTED_MODULE_0__.databaseService.getClient();\n        const { data: connection, error } = await supabase.from(\"whatsapp_connections\").select(`\n        *,\n        agente:agent_id (\n          id,\n          nome,\n          genero,\n          personalidade,\n          empresa_id,\n          ativo,\n          whatsapp_conectado,\n          whatsapp_numero,\n          fluxo_conversa,\n          created_at,\n          updated_at\n        )\n      `).eq(\"agent_id\", agentId).eq(\"status\", \"connected\").single();\n        if (error && error.code !== \"PGRST116\") {\n            throw new Error(`Erro ao buscar conexão WhatsApp do agente: ${error.message}`);\n        }\n        return connection || null;\n    }\n    async updateQrCode(instanceName, qrCode) {\n        const supabase = _lib_database__WEBPACK_IMPORTED_MODULE_0__.databaseService.getClient();\n        const { data: connection, error } = await supabase.from(\"whatsapp_connections\").update({\n            qr_code: qrCode,\n            last_updated: new Date().toISOString()\n        }).eq(\"instance_name\", instanceName).select(`\n        *,\n        agente:agent_id (\n          id,\n          nome,\n          genero,\n          personalidade,\n          empresa_id,\n          ativo,\n          whatsapp_conectado,\n          whatsapp_numero,\n          fluxo_conversa,\n          created_at,\n          updated_at\n        )\n      `).single();\n        if (error) {\n            throw new Error(`Erro ao atualizar QR Code: ${error.message}`);\n        }\n        return connection;\n    }\n    async updateStatus(instanceName, status, errorMessage) {\n        const supabase = _lib_database__WEBPACK_IMPORTED_MODULE_0__.databaseService.getClient();\n        const updateData = {\n            status,\n            last_updated: new Date().toISOString()\n        };\n        if (errorMessage) {\n            updateData.last_error = errorMessage;\n        }\n        // If status is expired or error, clear the QR code\n        if (status === \"expired\" || status === \"error\") {\n            updateData.qr_code = null;\n        }\n        const { data: connection, error } = await supabase.from(\"whatsapp_connections\").update(updateData).eq(\"instance_name\", instanceName).select(`\n        *,\n        agente:agent_id (\n          id,\n          nome,\n          genero,\n          personalidade,\n          empresa_id,\n          ativo,\n          whatsapp_conectado,\n          whatsapp_numero,\n          fluxo_conversa,\n          created_at,\n          updated_at\n        )\n      `).single();\n        if (error) {\n            throw new Error(`Erro ao atualizar status: ${error.message}`);\n        }\n        return connection;\n    }\n    async updatePhoneConnection(instanceName, phoneNumber, profileName) {\n        const supabase = _lib_database__WEBPACK_IMPORTED_MODULE_0__.databaseService.getClient();\n        const updateData = {\n            phone_number: phoneNumber,\n            status: \"connected\",\n            qr_code: null,\n            last_updated: new Date().toISOString()\n        };\n        // Update evolution instance data if we have profile name\n        if (profileName) {\n            updateData.evolution_instance_data = {\n                profileName\n            };\n        }\n        const { data: connection, error } = await supabase.from(\"whatsapp_connections\").update(updateData).eq(\"instance_name\", instanceName).select(`\n        *,\n        agente:agent_id (\n          id,\n          nome,\n          genero,\n          personalidade,\n          empresa_id,\n          ativo,\n          whatsapp_conectado,\n          whatsapp_numero,\n          fluxo_conversa,\n          created_at,\n          updated_at\n        )\n      `).single();\n        if (error) {\n            throw new Error(`Erro ao atualizar conexão do telefone: ${error.message}`);\n        }\n        // Update agent whatsapp status if agent is linked\n        if (connection.agent_id) {\n            await supabase.from(\"agente\").update({\n                whatsapp_conectado: true,\n                whatsapp_numero: phoneNumber\n            }).eq(\"id\", connection.agent_id);\n        }\n        return connection;\n    }\n    async updateEvolutionData(instanceName, data) {\n        const supabase = _lib_database__WEBPACK_IMPORTED_MODULE_0__.databaseService.getClient();\n        const { data: connection, error } = await supabase.from(\"whatsapp_connections\").update({\n            evolution_instance_data: data,\n            last_updated: new Date().toISOString()\n        }).eq(\"instance_name\", instanceName).select(`\n        *,\n        agente:agent_id (\n          id,\n          nome,\n          genero,\n          personalidade,\n          empresa_id,\n          ativo,\n          whatsapp_conectado,\n          whatsapp_numero,\n          fluxo_conversa,\n          created_at,\n          updated_at\n        )\n      `).single();\n        if (error) {\n            throw new Error(`Erro ao atualizar dados da Evolution API: ${error.message}`);\n        }\n        return connection;\n    }\n    async incrementAttempts(instanceName) {\n        const supabase = _lib_database__WEBPACK_IMPORTED_MODULE_0__.databaseService.getClient();\n        // First get current attempts count\n        const { data: current, error: fetchError } = await supabase.from(\"whatsapp_connections\").select(\"connection_attempts\").eq(\"instance_name\", instanceName).single();\n        if (fetchError) {\n            throw new Error(`Erro ao buscar tentativas: ${fetchError.message}`);\n        }\n        const { data: connection, error } = await supabase.from(\"whatsapp_connections\").update({\n            connection_attempts: (current.connection_attempts || 0) + 1,\n            last_updated: new Date().toISOString()\n        }).eq(\"instance_name\", instanceName).select(`\n        *,\n        agente:agent_id (\n          id,\n          nome,\n          genero,\n          personalidade,\n          empresa_id,\n          ativo,\n          whatsapp_conectado,\n          whatsapp_numero,\n          fluxo_conversa,\n          created_at,\n          updated_at\n        )\n      `).single();\n        if (error) {\n            throw new Error(`Erro ao incrementar tentativas: ${error.message}`);\n        }\n        return connection;\n    }\n    async delete(id) {\n        const supabase = _lib_database__WEBPACK_IMPORTED_MODULE_0__.databaseService.getClient();\n        const { error } = await supabase.from(\"whatsapp_connections\").delete().eq(\"id\", id);\n        if (error) {\n            throw new Error(`Erro ao deletar conexão WhatsApp: ${error.message}`);\n        }\n    }\n    async deleteByInstanceName(instanceName) {\n        const supabase = _lib_database__WEBPACK_IMPORTED_MODULE_0__.databaseService.getClient();\n        const { error } = await supabase.from(\"whatsapp_connections\").delete().eq(\"instance_name\", instanceName);\n        if (error) {\n            throw new Error(`Erro ao deletar conexão WhatsApp: ${error.message}`);\n        }\n    }\n    async cleanupExpired() {\n        const supabase = _lib_database__WEBPACK_IMPORTED_MODULE_0__.databaseService.getClient();\n        const { data: expiredConnections, error } = await supabase.from(\"whatsapp_connections\").delete().lt(\"expires_at\", new Date().toISOString()).eq(\"status\", \"pending\").select(\"id\");\n        if (error) {\n            throw new Error(`Erro ao limpar conexões expiradas: ${error.message}`);\n        }\n        return expiredConnections?.length || 0;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/repositories/whatsapp-connection.repository.ts\n");

/***/ }),

/***/ "(rsc)/./src/services/whatsapp-connection.service.ts":
/*!*****************************************************!*\
  !*** ./src/services/whatsapp-connection.service.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WhatsAppConnectionService: () => (/* binding */ WhatsAppConnectionService),\n/* harmony export */   createWhatsAppConnectionService: () => (/* binding */ createWhatsAppConnectionService)\n/* harmony export */ });\n/* harmony import */ var _repositories_whatsapp_connection_repository__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/repositories/whatsapp-connection.repository */ \"(rsc)/./src/repositories/whatsapp-connection.repository.ts\");\n\nclass WhatsAppConnectionService {\n    constructor(whatsappRepository, evolutionApiUrl = process.env.EVOLUTION_API_URL || \"\", evolutionApiKey = process.env.EVOLUTION_API_KEY || \"\"){\n        this.whatsappRepository = whatsappRepository;\n        this.evolutionApiUrl = evolutionApiUrl;\n        this.evolutionApiKey = evolutionApiKey;\n    }\n    /**\n   * Maps Evolution API status to our WhatsApp connection status\n   */ mapEvolutionStatusToConnectionStatus(evolutionStatus) {\n        const status = evolutionStatus.toLowerCase();\n        switch(status){\n            case \"open\":\n                return \"connected\";\n            case \"connecting\":\n            case \"qrReadSuccess\":\n                return \"pending\";\n            case \"close\":\n            case \"destroyed\":\n                return \"disconnected\";\n            case \"timeout\":\n                return \"expired\";\n            default:\n                return \"pending\";\n        }\n    }\n    async createConnection(data) {\n        try {\n            // Check if instance name already exists\n            const existingConnection = await this.whatsappRepository.findByInstanceName(data.instance_name);\n            if (existingConnection) {\n                return {\n                    success: false,\n                    message: \"Uma conex\\xe3o com este nome j\\xe1 existe\",\n                    error: \"INSTANCE_EXISTS\"\n                };\n            }\n            // Create database record\n            const connection = await this.whatsappRepository.create(data);\n            return {\n                success: true,\n                message: \"Conex\\xe3o WhatsApp criada com sucesso\",\n                data: connection\n            };\n        } catch (error) {\n            return {\n                success: false,\n                message: \"Erro ao criar conex\\xe3o WhatsApp\",\n                error: error.message\n            };\n        }\n    }\n    async initiateEvolutionInstance(instanceName, userId, agentId, agentType) {\n        try {\n            console.log(\"=== Service: initiateEvolutionInstance ===\");\n            console.log(\"Parameters:\", {\n                instanceName,\n                userId,\n                agentId,\n                agentType\n            });\n            // Buscar URL do webhook no banco pelo tipo de agente\n            if (!agentType) {\n                return {\n                    success: false,\n                    message: \"Tipo de agente n\\xe3o informado\",\n                    error: \"AGENT_TYPE_REQUIRED\"\n                };\n            }\n            const supabase = (__webpack_require__(/*! @/lib/database */ \"(rsc)/./src/lib/database.ts\").databaseService).getClient();\n            const { data: webhookRows, error: webhookError } = await supabase.from(\"webhook\").select(\"url\").eq(\"tipo\", agentType).limit(1).single();\n            if (webhookError || !webhookRows || !webhookRows.url) {\n                return {\n                    success: false,\n                    message: \"Webhook n\\xe3o encontrado para o tipo de agente informado\",\n                    error: \"WEBHOOK_NOT_FOUND\"\n                };\n            }\n            const webhookUrl = webhookRows.url;\n            console.log(\"Webhook URL from DB:\", webhookUrl);\n            // First create the database connection\n            const connectionResult = await this.createConnection({\n                instance_name: instanceName,\n                user_id: userId,\n                agent_id: agentId || undefined,\n                webhook_url: webhookUrl\n            });\n            console.log(\"Database connection result:\", connectionResult);\n            if (!connectionResult.success) {\n                console.error(\"Database connection failed:\", connectionResult);\n                return connectionResult;\n            }\n            // Prepare Evolution API request\n            const evolutionRequest = {\n                instanceName: instanceName,\n                qrcode: true,\n                integration: \"WHATSAPP-BAILEYS\",\n                webhook: {\n                    url: webhookUrl,\n                    base64: true,\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    events: [\n                        \"QRCODE_UPDATED\",\n                        \"CONNECTION_UPDATE\",\n                        \"MESSAGES_UPSERT\"\n                    ]\n                }\n            };\n            console.log(\"Evolution API request:\", evolutionRequest);\n            console.log(\"Evolution API URL:\", this.evolutionApiUrl);\n            console.log(\"Evolution API Key length:\", this.evolutionApiKey.length);\n            // Call Evolution API to create instance\n            console.log(\"Calling Evolution API...\");\n            const response = await fetch(`${this.evolutionApiUrl}/instance/create`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"apikey\": this.evolutionApiKey\n                },\n                body: JSON.stringify(evolutionRequest)\n            });\n            console.log(\"Evolution API response status:\", response.status);\n            if (!response.ok) {\n                console.log(\"Evolution API failed, reading error...\");\n                const errorText = await response.text();\n                console.log(\"Evolution API error response:\", errorText);\n                let errorData;\n                try {\n                    errorData = JSON.parse(errorText);\n                } catch  {\n                    errorData = {\n                        error: \"UNKNOWN_ERROR\",\n                        message: errorText || \"Unknown error from Evolution API\",\n                        statusCode: response.status\n                    };\n                }\n                // Clean up database connection if Evolution API fails\n                console.log(\"Cleaning up database connection...\");\n                await this.whatsappRepository.deleteByInstanceName(instanceName);\n                return {\n                    success: false,\n                    message: `Erro na Evolution API: ${errorData.message}`,\n                    error: errorData.error\n                };\n            }\n            console.log(\"Evolution API success, parsing response...\");\n            const evolutionResponse = await response.json();\n            console.log(\"Evolution API response:\", evolutionResponse);\n            // Update connection with initial QR code and Evolution data\n            if (evolutionResponse.qrcode?.base64) {\n                await this.whatsappRepository.updateQrCode(instanceName, evolutionResponse.qrcode.base64);\n            }\n            // Map Evolution API status to our status enum\n            const mappedStatus = this.mapEvolutionStatusToConnectionStatus(evolutionResponse.instance.status);\n            // Store the complete evolution response for reference\n            const evolutionData = {\n                instanceName: evolutionResponse.instance.instanceName,\n                owner: \"\",\n                status: evolutionResponse.instance.status,\n                apikey: evolutionResponse.hash?.apikey\n            };\n            await this.whatsappRepository.updateEvolutionData(instanceName, evolutionData);\n            // Update status separately if needed\n            if (mappedStatus !== \"pending\") {\n                await this.whatsappRepository.updateStatus(instanceName, mappedStatus);\n            }\n            // Get updated connection\n            const updatedConnection = await this.whatsappRepository.findByInstanceName(instanceName);\n            return {\n                success: true,\n                message: \"Inst\\xe2ncia Evolution API criada com sucesso\",\n                data: updatedConnection\n            };\n        } catch (error) {\n            // Clean up database connection if something fails\n            try {\n                await this.whatsappRepository.deleteByInstanceName(instanceName);\n            } catch (cleanupError) {\n                console.error(\"Erro ao limpar conex\\xe3o ap\\xf3s falha:\", cleanupError);\n            }\n            return {\n                success: false,\n                message: \"Erro ao iniciar inst\\xe2ncia Evolution API\",\n                error: error.message\n            };\n        }\n    }\n    async getConnectionStatus(instanceName) {\n        try {\n            const connection = await this.whatsappRepository.findByInstanceName(instanceName);\n            if (!connection) {\n                return {\n                    success: false,\n                    message: \"Conex\\xe3o n\\xe3o encontrada\",\n                    error: \"CONNECTION_NOT_FOUND\"\n                };\n            }\n            const now = new Date();\n            const expiresAt = new Date(connection.expires_at);\n            const createdAt = new Date(connection.created_at);\n            const connectionDuration = now.getTime() - createdAt.getTime();\n            const maxAttempts = 5;\n            // Check if expired\n            if (now > expiresAt && connection.status === \"pending\") {\n                await this.whatsappRepository.updateStatus(instanceName, \"expired\");\n                connection.status = \"expired\";\n            }\n            const statusResponse = {\n                qrCode: connection.qr_code || null,\n                status: connection.status,\n                lastUpdated: connection.last_updated,\n                connectionDuration,\n                phoneNumber: connection.phone_number,\n                profileName: connection.evolution_instance_data?.profileName,\n                expiresAt: connection.expires_at,\n                attemptsRemaining: Math.max(0, maxAttempts - connection.connection_attempts)\n            };\n            return {\n                success: true,\n                message: \"Status da conex\\xe3o recuperado\",\n                data: statusResponse\n            };\n        } catch (error) {\n            return {\n                success: false,\n                message: \"Erro ao buscar status da conex\\xe3o\",\n                error: error.message\n            };\n        }\n    }\n    async getConnectionsByUser(userId) {\n        try {\n            const connections = await this.whatsappRepository.findByUserId(userId);\n            return {\n                success: true,\n                message: \"Conex\\xf5es do usu\\xe1rio recuperadas\",\n                data: connections\n            };\n        } catch (error) {\n            return {\n                success: false,\n                message: \"Erro ao buscar conex\\xf5es do usu\\xe1rio\",\n                error: error.message\n            };\n        }\n    }\n    async deleteConnection(instanceName) {\n        try {\n            const connection = await this.whatsappRepository.findByInstanceName(instanceName);\n            if (!connection) {\n                return {\n                    success: false,\n                    message: \"Conex\\xe3o n\\xe3o encontrada\",\n                    error: \"CONNECTION_NOT_FOUND\"\n                };\n            }\n            // Try to delete from Evolution API\n            try {\n                await fetch(`${this.evolutionApiUrl}/instance/delete/${instanceName}`, {\n                    method: \"DELETE\",\n                    headers: {\n                        \"apikey\": this.evolutionApiKey\n                    }\n                });\n            } catch (evolutionError) {\n                console.warn(\"Erro ao deletar inst\\xe2ncia da Evolution API:\", evolutionError);\n            // Continue with database deletion even if Evolution API fails\n            }\n            // Update agent if connected\n            if (connection.agent_id && connection.status === \"connected\") {\n                // This would need to be done through the agent service/repository\n                // For now, we'll update directly (not ideal but functional)\n                const supabase = (__webpack_require__(/*! @/lib/database */ \"(rsc)/./src/lib/database.ts\").databaseService).getClient();\n                await supabase.from(\"agente\").update({\n                    whatsapp_conectado: false,\n                    whatsapp_numero: null\n                }).eq(\"id\", connection.agent_id);\n            }\n            // Delete from database\n            await this.whatsappRepository.deleteByInstanceName(instanceName);\n            return {\n                success: true,\n                message: \"Conex\\xe3o deletada com sucesso\"\n            };\n        } catch (error) {\n            return {\n                success: false,\n                message: \"Erro ao deletar conex\\xe3o\",\n                error: error.message\n            };\n        }\n    }\n    async processWebhookEvent(instanceName, event) {\n        try {\n            const connection = await this.whatsappRepository.findByInstanceName(instanceName);\n            if (!connection) {\n                return {\n                    success: false,\n                    message: \"Conex\\xe3o n\\xe3o encontrada para o webhook\",\n                    error: \"CONNECTION_NOT_FOUND\"\n                };\n            }\n            console.log(`Processing webhook event: ${event.event} for instance: ${instanceName}`);\n            switch(event.event){\n                case \"QRCODE_UPDATED\":\n                    if (event.data?.qrcode?.base64) {\n                        await this.whatsappRepository.updateQrCode(instanceName, event.data.qrcode.base64);\n                        console.log(`QR Code updated for instance: ${instanceName}`);\n                    }\n                    break;\n                case \"CONNECTION_UPDATE\":\n                    if (event.data?.state) {\n                        const state = event.data.state.toLowerCase();\n                        const mappedStatus = this.mapEvolutionStatusToConnectionStatus(state);\n                        // If connected and we have phone info, update phone connection\n                        if (mappedStatus === \"connected\" && event.data?.phone?.number) {\n                            await this.whatsappRepository.updatePhoneConnection(instanceName, event.data.phone.number, event.data.phone.pushName);\n                            console.log(`WhatsApp connected for instance: ${instanceName}, phone: ${event.data.phone.number}`);\n                        } else {\n                            await this.whatsappRepository.updateStatus(instanceName, mappedStatus);\n                            console.log(`Connection state changed for instance: ${instanceName}, state: ${state}, mapped: ${mappedStatus}`);\n                        }\n                    }\n                    break;\n                case \"MESSAGES_UPSERT\":\n                    // Handle incoming messages if needed for chat functionality\n                    console.log(`Message received for instance: ${instanceName}`);\n                    break;\n                default:\n                    console.log(`Unhandled webhook event: ${event.event} for instance: ${instanceName}`);\n            }\n            return {\n                success: true,\n                message: \"Evento do webhook processado com sucesso\"\n            };\n        } catch (error) {\n            console.error(\"Erro ao processar evento do webhook:\", error);\n            return {\n                success: false,\n                message: \"Erro ao processar evento do webhook\",\n                error: error.message\n            };\n        }\n    }\n    async checkInstanceStatus(instanceName) {\n        try {\n            const response = await fetch(`${this.evolutionApiUrl}/instance/fetchInstances/${instanceName}`, {\n                method: \"GET\",\n                headers: {\n                    \"apikey\": this.evolutionApiKey\n                }\n            });\n            if (!response.ok) {\n                const errorData = await response.json();\n                return {\n                    success: false,\n                    message: `Erro na Evolution API: ${errorData.message}`,\n                    error: errorData.error\n                };\n            }\n            const status = await response.json();\n            return {\n                success: true,\n                message: \"Status da inst\\xe2ncia recuperado\",\n                data: status\n            };\n        } catch (error) {\n            return {\n                success: false,\n                message: \"Erro ao verificar status da inst\\xe2ncia\",\n                error: error.message\n            };\n        }\n    }\n    async cleanupExpiredConnections() {\n        try {\n            const cleanedCount = await this.whatsappRepository.cleanupExpired();\n            return {\n                success: true,\n                message: `${cleanedCount} conexões expiradas removidas`,\n                data: cleanedCount\n            };\n        } catch (error) {\n            return {\n                success: false,\n                message: \"Erro ao limpar conex\\xf5es expiradas\",\n                error: error.message\n            };\n        }\n    }\n}\n// Factory function\nfunction createWhatsAppConnectionService() {\n    const whatsappRepository = new _repositories_whatsapp_connection_repository__WEBPACK_IMPORTED_MODULE_0__.WhatsAppConnectionRepository();\n    return new WhatsAppConnectionService(whatsappRepository);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvc2VydmljZXMvd2hhdHNhcHAtY29ubmVjdGlvbi5zZXJ2aWNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUd1RDtBQXdCaEQsTUFBTUM7SUFFWEMsWUFDRSxrQkFBeUQsRUFDekQsa0JBQWtDRyxRQUFRQyxHQUFHLENBQUNDLGlCQUFpQixJQUFJLEVBQUUsRUFDckUsa0JBQWtDRixRQUFRQyxHQUFHLENBQUNHLGlCQUFpQixJQUFJLEVBQUUsQ0FDckU7YUFIUU4scUJBQUFBO2FBQ0FDLGtCQUFBQTthQUNBSSxrQkFBQUE7SUFDUDtJQUVIOztHQUVDLEdBQ0QscUNBQTZDRyxlQUF1QixFQUFnQztRQUNsRyxNQUFNQyxTQUFTRCxnQkFBZ0JFLFdBQVc7UUFFMUMsT0FBUUQ7WUFDTixLQUFLO2dCQUNILE9BQU87WUFDVCxLQUFLO1lBQ0wsS0FBSztnQkFDSCxPQUFPO1lBQ1QsS0FBSztZQUNMLEtBQUs7Z0JBQ0gsT0FBTztZQUNULEtBQUs7Z0JBQ0gsT0FBTztZQUNUO2dCQUNFLE9BQU87UUFDWDtJQUNGO0lBRUEsTUFBTUUsaUJBQWlCQyxJQUF3RCxFQUE0QztRQUN6SCxJQUFJO1lBQ0Ysd0NBQXdDO1lBQ3hDLE1BQU1DLHFCQUFxQixNQUFNLElBQUksQ0FBQ2Isa0JBQWtCLENBQUNjLGtCQUFrQixDQUFDRixLQUFLRyxhQUFhO1lBQzlGLElBQUlGLG9CQUFvQjtnQkFDdEIsT0FBTztvQkFDTEcsU0FBUztvQkFDVEMsU0FBUztvQkFDVEMsT0FBTztnQkFDVDtZQUNGO1lBRUEseUJBQXlCO1lBQ3pCLE1BQU1DLGFBQWEsTUFBTSxJQUFJLENBQUNuQixrQkFBa0IsQ0FBQ29CLE1BQU0sQ0FBQ1I7WUFFeEQsT0FBTztnQkFDTEksU0FBUztnQkFDVEMsU0FBUztnQkFDVEwsTUFBTU87WUFDUjtRQUNGLEVBQUUsT0FBT0QsT0FBWTtZQUNuQixPQUFPO2dCQUNMRixTQUFTO2dCQUNUQyxTQUFTO2dCQUNUQyxPQUFPQSxNQUFNRCxPQUFPO1lBQ3RCO1FB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QkFDdkQ3RyxNQUFNNkc7WUFDUjtRQUNGLEVBQUUsT0FBT3ZHLE9BQVk7WUFDbkIsT0FBTztnQkFDTEYsU0FBUztnQkFDVEMsU0FBUztnQkFDVEMsT0FBT0EsTUFBTUQsT0FBTztZQUN0QjtRQUNGO0lBQ0Y7QUFDRjtBQUVBLG1CQUFtQjtBQUNaLFNBQVMwRztJQUNkLE1BQU0zSCxxQkFBcUIsSUFBSUgsc0dBQTRCQTtJQUMzRCxPQUFPLElBQUlDLDBCQUEwQkU7QUFDdkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hdGxhcy1hdXRoLy4vc3JjL3NlcnZpY2VzL3doYXRzYXBwLWNvbm5lY3Rpb24uc2VydmljZS50cz9mZWUwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFxuICBXaGF0c0FwcENvbm5lY3Rpb25SZXBvc2l0b3J5LCBcbiAgSVdoYXRzQXBwQ29ubmVjdGlvblJlcG9zaXRvcnkgXG59IGZyb20gJ0AvcmVwb3NpdG9yaWVzL3doYXRzYXBwLWNvbm5lY3Rpb24ucmVwb3NpdG9yeSc7XG5pbXBvcnQgeyBcbiAgV2hhdHNBcHBDb25uZWN0aW9uLCBcbiAgQ3JlYXRlV2hhdHNBcHBDb25uZWN0aW9uRGF0YSwgXG4gIEFwaVJlc3BvbnNlLFxuICBFdm9sdXRpb25DcmVhdGVJbnN0YW5jZVJlcXVlc3QsXG4gIEV2b2x1dGlvbkNyZWF0ZUluc3RhbmNlUmVzcG9uc2UsXG4gIEV2b2x1dGlvbkluc3RhbmNlRGF0YSxcbiAgRXZvbHV0aW9uSW5zdGFuY2VTdGF0dXMsXG4gIEV2b2x1dGlvbkFwaUVycm9yLFxuICBDb25uZWN0aW9uU3RhdHVzUmVzcG9uc2Vcbn0gZnJvbSAnQC90eXBlcyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSVdoYXRzQXBwQ29ubmVjdGlvblNlcnZpY2Uge1xuICBjcmVhdGVDb25uZWN0aW9uKGRhdGE6IENyZWF0ZVdoYXRzQXBwQ29ubmVjdGlvbkRhdGEgJiB7IHVzZXJfaWQ6IHN0cmluZyB9KTogUHJvbWlzZTxBcGlSZXNwb25zZTxXaGF0c0FwcENvbm5lY3Rpb24+PjtcbiAgaW5pdGlhdGVFdm9sdXRpb25JbnN0YW5jZShpbnN0YW5jZU5hbWU6IHN0cmluZywgdXNlcklkOiBzdHJpbmcsIGFnZW50SWQ/OiBzdHJpbmcsIGFnZW50VHlwZT86IHN0cmluZyk6IFByb21pc2U8QXBpUmVzcG9uc2U8V2hhdHNBcHBDb25uZWN0aW9uPj47XG4gIGdldENvbm5lY3Rpb25TdGF0dXMoaW5zdGFuY2VOYW1lOiBzdHJpbmcpOiBQcm9taXNlPEFwaVJlc3BvbnNlPENvbm5lY3Rpb25TdGF0dXNSZXNwb25zZT4+O1xuICBnZXRDb25uZWN0aW9uc0J5VXNlcih1c2VySWQ6IHN0cmluZyk6IFByb21pc2U8QXBpUmVzcG9uc2U8V2hhdHNBcHBDb25uZWN0aW9uW10+PjtcbiAgZGVsZXRlQ29ubmVjdGlvbihpbnN0YW5jZU5hbWU6IHN0cmluZyk6IFByb21pc2U8QXBpUmVzcG9uc2U8dm9pZD4+O1xuICBwcm9jZXNzV2ViaG9va0V2ZW50KGluc3RhbmNlTmFtZTogc3RyaW5nLCBldmVudDogYW55KTogUHJvbWlzZTxBcGlSZXNwb25zZTx2b2lkPj47XG4gIGNoZWNrSW5zdGFuY2VTdGF0dXMoaW5zdGFuY2VOYW1lOiBzdHJpbmcpOiBQcm9taXNlPEFwaVJlc3BvbnNlPEV2b2x1dGlvbkluc3RhbmNlU3RhdHVzPj47XG4gIGNsZWFudXBFeHBpcmVkQ29ubmVjdGlvbnMoKTogUHJvbWlzZTxBcGlSZXNwb25zZTxudW1iZXI+Pjtcbn1cblxuZXhwb3J0IGNsYXNzIFdoYXRzQXBwQ29ubmVjdGlvblNlcnZpY2UgaW1wbGVtZW50cyBJV2hhdHNBcHBDb25uZWN0aW9uU2VydmljZSB7XG4gIFxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHdoYXRzYXBwUmVwb3NpdG9yeTogSVdoYXRzQXBwQ29ubmVjdGlvblJlcG9zaXRvcnksXG4gICAgcHJpdmF0ZSBldm9sdXRpb25BcGlVcmw6IHN0cmluZyA9IHByb2Nlc3MuZW52LkVWT0xVVElPTl9BUElfVVJMIHx8ICcnLFxuICAgIHByaXZhdGUgZXZvbHV0aW9uQXBpS2V5OiBzdHJpbmcgPSBwcm9jZXNzLmVudi5FVk9MVVRJT05fQVBJX0tFWSB8fCAnJ1xuICApIHt9XG5cbiAgLyoqXG4gICAqIE1hcHMgRXZvbHV0aW9uIEFQSSBzdGF0dXMgdG8gb3VyIFdoYXRzQXBwIGNvbm5lY3Rpb24gc3RhdHVzXG4gICAqL1xuICBwcml2YXRlIG1hcEV2b2x1dGlvblN0YXR1c1RvQ29ubmVjdGlvblN0YXR1cyhldm9sdXRpb25TdGF0dXM6IHN0cmluZyk6IFdoYXRzQXBwQ29ubmVjdGlvblsnc3RhdHVzJ10ge1xuICAgIGNvbnN0IHN0YXR1cyA9IGV2b2x1dGlvblN0YXR1cy50b0xvd2VyQ2FzZSgpO1xuICAgIFxuICAgIHN3aXRjaCAoc3RhdHVzKSB7XG4gICAgICBjYXNlICdvcGVuJzpcbiAgICAgICAgcmV0dXJuICdjb25uZWN0ZWQnO1xuICAgICAgY2FzZSAnY29ubmVjdGluZyc6XG4gICAgICBjYXNlICdxclJlYWRTdWNjZXNzJzpcbiAgICAgICAgcmV0dXJuICdwZW5kaW5nJztcbiAgICAgIGNhc2UgJ2Nsb3NlJzpcbiAgICAgIGNhc2UgJ2Rlc3Ryb3llZCc6XG4gICAgICAgIHJldHVybiAnZGlzY29ubmVjdGVkJztcbiAgICAgIGNhc2UgJ3RpbWVvdXQnOlxuICAgICAgICByZXR1cm4gJ2V4cGlyZWQnO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuICdwZW5kaW5nJztcbiAgICB9XG4gIH1cblxuICBhc3luYyBjcmVhdGVDb25uZWN0aW9uKGRhdGE6IENyZWF0ZVdoYXRzQXBwQ29ubmVjdGlvbkRhdGEgJiB7IHVzZXJfaWQ6IHN0cmluZyB9KTogUHJvbWlzZTxBcGlSZXNwb25zZTxXaGF0c0FwcENvbm5lY3Rpb24+PiB7XG4gICAgdHJ5IHtcbiAgICAgIC8vIENoZWNrIGlmIGluc3RhbmNlIG5hbWUgYWxyZWFkeSBleGlzdHNcbiAgICAgIGNvbnN0IGV4aXN0aW5nQ29ubmVjdGlvbiA9IGF3YWl0IHRoaXMud2hhdHNhcHBSZXBvc2l0b3J5LmZpbmRCeUluc3RhbmNlTmFtZShkYXRhLmluc3RhbmNlX25hbWUpO1xuICAgICAgaWYgKGV4aXN0aW5nQ29ubmVjdGlvbikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgIG1lc3NhZ2U6ICdVbWEgY29uZXjDo28gY29tIGVzdGUgbm9tZSBqw6EgZXhpc3RlJyxcbiAgICAgICAgICBlcnJvcjogJ0lOU1RBTkNFX0VYSVNUUydcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgLy8gQ3JlYXRlIGRhdGFiYXNlIHJlY29yZFxuICAgICAgY29uc3QgY29ubmVjdGlvbiA9IGF3YWl0IHRoaXMud2hhdHNhcHBSZXBvc2l0b3J5LmNyZWF0ZShkYXRhKTtcblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgbWVzc2FnZTogJ0NvbmV4w6NvIFdoYXRzQXBwIGNyaWFkYSBjb20gc3VjZXNzbycsXG4gICAgICAgIGRhdGE6IGNvbm5lY3Rpb25cbiAgICAgIH07XG4gICAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIG1lc3NhZ2U6ICdFcnJvIGFvIGNyaWFyIGNvbmV4w6NvIFdoYXRzQXBwJyxcbiAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2VcbiAgICAgIH07XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgaW5pdGlhdGVFdm9sdXRpb25JbnN0YW5jZShpbnN0YW5jZU5hbWU6IHN0cmluZywgdXNlcklkOiBzdHJpbmcsIGFnZW50SWQ/OiBzdHJpbmcsIGFnZW50VHlwZT86IHN0cmluZyk6IFByb21pc2U8QXBpUmVzcG9uc2U8V2hhdHNBcHBDb25uZWN0aW9uPj4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zb2xlLmxvZygnPT09IFNlcnZpY2U6IGluaXRpYXRlRXZvbHV0aW9uSW5zdGFuY2UgPT09Jyk7XG4gICAgICBjb25zb2xlLmxvZygnUGFyYW1ldGVyczonLCB7IGluc3RhbmNlTmFtZSwgdXNlcklkLCBhZ2VudElkLCBhZ2VudFR5cGUgfSk7XG4gICAgICBcbiAgICAgIC8vIEJ1c2NhciBVUkwgZG8gd2ViaG9vayBubyBiYW5jbyBwZWxvIHRpcG8gZGUgYWdlbnRlXG4gICAgICBpZiAoIWFnZW50VHlwZSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgIG1lc3NhZ2U6ICdUaXBvIGRlIGFnZW50ZSBuw6NvIGluZm9ybWFkbycsXG4gICAgICAgICAgZXJyb3I6ICdBR0VOVF9UWVBFX1JFUVVJUkVEJ1xuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgY29uc3Qgc3VwYWJhc2UgPSByZXF1aXJlKCdAL2xpYi9kYXRhYmFzZScpLmRhdGFiYXNlU2VydmljZS5nZXRDbGllbnQoKTtcbiAgICAgIGNvbnN0IHsgZGF0YTogd2ViaG9va1Jvd3MsIGVycm9yOiB3ZWJob29rRXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAgIC5mcm9tKCd3ZWJob29rJylcbiAgICAgICAgLnNlbGVjdCgndXJsJylcbiAgICAgICAgLmVxKCd0aXBvJywgYWdlbnRUeXBlKVxuICAgICAgICAubGltaXQoMSlcbiAgICAgICAgLnNpbmdsZSgpO1xuICAgICAgaWYgKHdlYmhvb2tFcnJvciB8fCAhd2ViaG9va1Jvd3MgfHwgIXdlYmhvb2tSb3dzLnVybCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgIG1lc3NhZ2U6ICdXZWJob29rIG7Do28gZW5jb250cmFkbyBwYXJhIG8gdGlwbyBkZSBhZ2VudGUgaW5mb3JtYWRvJyxcbiAgICAgICAgICBlcnJvcjogJ1dFQkhPT0tfTk9UX0ZPVU5EJ1xuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgY29uc3Qgd2ViaG9va1VybCA9IHdlYmhvb2tSb3dzLnVybDtcbiAgICAgIGNvbnNvbGUubG9nKCdXZWJob29rIFVSTCBmcm9tIERCOicsIHdlYmhvb2tVcmwpO1xuICAgICAgXG4gICAgICAvLyBGaXJzdCBjcmVhdGUgdGhlIGRhdGFiYXNlIGNvbm5lY3Rpb25cbiAgICAgIGNvbnN0IGNvbm5lY3Rpb25SZXN1bHQgPSBhd2FpdCB0aGlzLmNyZWF0ZUNvbm5lY3Rpb24oe1xuICAgICAgICBpbnN0YW5jZV9uYW1lOiBpbnN0YW5jZU5hbWUsXG4gICAgICAgIHVzZXJfaWQ6IHVzZXJJZCxcbiAgICAgICAgYWdlbnRfaWQ6IGFnZW50SWQgfHwgdW5kZWZpbmVkLCAvLyBHYXJhbnRlIHF1ZSBzZWphIHVuZGVmaW5lZCBzZSBuw6NvIGZvcm5lY2lkb1xuICAgICAgICB3ZWJob29rX3VybDogd2ViaG9va1VybFxuICAgICAgfSk7XG5cbiAgICAgIGNvbnNvbGUubG9nKCdEYXRhYmFzZSBjb25uZWN0aW9uIHJlc3VsdDonLCBjb25uZWN0aW9uUmVzdWx0KTtcblxuICAgICAgaWYgKCFjb25uZWN0aW9uUmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignRGF0YWJhc2UgY29ubmVjdGlvbiBmYWlsZWQ6JywgY29ubmVjdGlvblJlc3VsdCk7XG4gICAgICAgIHJldHVybiBjb25uZWN0aW9uUmVzdWx0O1xuICAgICAgfVxuXG4gICAgICAvLyBQcmVwYXJlIEV2b2x1dGlvbiBBUEkgcmVxdWVzdFxuICAgICAgY29uc3QgZXZvbHV0aW9uUmVxdWVzdDogRXZvbHV0aW9uQ3JlYXRlSW5zdGFuY2VSZXF1ZXN0ID0ge1xuICAgICAgICBpbnN0YW5jZU5hbWU6IGluc3RhbmNlTmFtZSwgLy8gdmluZG8gZG8gZnJvbnRlbmRcbiAgICAgICAgcXJjb2RlOiB0cnVlLFxuICAgICAgICBpbnRlZ3JhdGlvbjogJ1dIQVRTQVBQLUJBSUxFWVMnLFxuICAgICAgICB3ZWJob29rOiB7XG4gICAgICAgICAgdXJsOiB3ZWJob29rVXJsLCBcbiAgICAgICAgICBiYXNlNjQ6IHRydWUsXG4gICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICAgICAgICB9LFxuICAgICAgICAgIGV2ZW50czogW1xuICAgICAgICAgICAgJ1FSQ09ERV9VUERBVEVEJyxcbiAgICAgICAgICAgICdDT05ORUNUSU9OX1VQREFURScsXG4gICAgICAgICAgICAnTUVTU0FHRVNfVVBTRVJUJ1xuICAgICAgICAgIF1cbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgY29uc29sZS5sb2coJ0V2b2x1dGlvbiBBUEkgcmVxdWVzdDonLCBldm9sdXRpb25SZXF1ZXN0KTtcbiAgICAgIGNvbnNvbGUubG9nKCdFdm9sdXRpb24gQVBJIFVSTDonLCB0aGlzLmV2b2x1dGlvbkFwaVVybCk7XG4gICAgICBjb25zb2xlLmxvZygnRXZvbHV0aW9uIEFQSSBLZXkgbGVuZ3RoOicsIHRoaXMuZXZvbHV0aW9uQXBpS2V5Lmxlbmd0aCk7XG5cbiAgICAgIC8vIENhbGwgRXZvbHV0aW9uIEFQSSB0byBjcmVhdGUgaW5zdGFuY2VcbiAgICAgIGNvbnNvbGUubG9nKCdDYWxsaW5nIEV2b2x1dGlvbiBBUEkuLi4nKTtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYCR7dGhpcy5ldm9sdXRpb25BcGlVcmx9L2luc3RhbmNlL2NyZWF0ZWAsIHtcbiAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICdhcGlrZXknOiB0aGlzLmV2b2x1dGlvbkFwaUtleVxuICAgICAgICB9LFxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShldm9sdXRpb25SZXF1ZXN0KVxuICAgICAgfSk7XG5cbiAgICAgIGNvbnNvbGUubG9nKCdFdm9sdXRpb24gQVBJIHJlc3BvbnNlIHN0YXR1czonLCByZXNwb25zZS5zdGF0dXMpO1xuXG4gICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdFdm9sdXRpb24gQVBJIGZhaWxlZCwgcmVhZGluZyBlcnJvci4uLicpO1xuICAgICAgICBjb25zdCBlcnJvclRleHQgPSBhd2FpdCByZXNwb25zZS50ZXh0KCk7XG4gICAgICAgIGNvbnNvbGUubG9nKCdFdm9sdXRpb24gQVBJIGVycm9yIHJlc3BvbnNlOicsIGVycm9yVGV4dCk7XG4gICAgICAgIFxuICAgICAgICBsZXQgZXJyb3JEYXRhOiBFdm9sdXRpb25BcGlFcnJvcjtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBlcnJvckRhdGEgPSBKU09OLnBhcnNlKGVycm9yVGV4dCk7XG4gICAgICAgIH0gY2F0Y2gge1xuICAgICAgICAgIGVycm9yRGF0YSA9IHtcbiAgICAgICAgICAgIGVycm9yOiAnVU5LTk9XTl9FUlJPUicsXG4gICAgICAgICAgICBtZXNzYWdlOiBlcnJvclRleHQgfHwgJ1Vua25vd24gZXJyb3IgZnJvbSBFdm9sdXRpb24gQVBJJyxcbiAgICAgICAgICAgIHN0YXR1c0NvZGU6IHJlc3BvbnNlLnN0YXR1c1xuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC8vIENsZWFuIHVwIGRhdGFiYXNlIGNvbm5lY3Rpb24gaWYgRXZvbHV0aW9uIEFQSSBmYWlsc1xuICAgICAgICBjb25zb2xlLmxvZygnQ2xlYW5pbmcgdXAgZGF0YWJhc2UgY29ubmVjdGlvbi4uLicpO1xuICAgICAgICBhd2FpdCB0aGlzLndoYXRzYXBwUmVwb3NpdG9yeS5kZWxldGVCeUluc3RhbmNlTmFtZShpbnN0YW5jZU5hbWUpO1xuICAgICAgICBcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgICBtZXNzYWdlOiBgRXJybyBuYSBFdm9sdXRpb24gQVBJOiAke2Vycm9yRGF0YS5tZXNzYWdlfWAsXG4gICAgICAgICAgZXJyb3I6IGVycm9yRGF0YS5lcnJvclxuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICBjb25zb2xlLmxvZygnRXZvbHV0aW9uIEFQSSBzdWNjZXNzLCBwYXJzaW5nIHJlc3BvbnNlLi4uJyk7XG4gICAgICBjb25zdCBldm9sdXRpb25SZXNwb25zZTogRXZvbHV0aW9uQ3JlYXRlSW5zdGFuY2VSZXNwb25zZSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgIGNvbnNvbGUubG9nKCdFdm9sdXRpb24gQVBJIHJlc3BvbnNlOicsIGV2b2x1dGlvblJlc3BvbnNlKTtcblxuICAgICAgLy8gVXBkYXRlIGNvbm5lY3Rpb24gd2l0aCBpbml0aWFsIFFSIGNvZGUgYW5kIEV2b2x1dGlvbiBkYXRhXG4gICAgICBpZiAoZXZvbHV0aW9uUmVzcG9uc2UucXJjb2RlPy5iYXNlNjQpIHtcbiAgICAgICAgYXdhaXQgdGhpcy53aGF0c2FwcFJlcG9zaXRvcnkudXBkYXRlUXJDb2RlKGluc3RhbmNlTmFtZSwgZXZvbHV0aW9uUmVzcG9uc2UucXJjb2RlLmJhc2U2NCk7XG4gICAgICB9XG5cbiAgICAgIC8vIE1hcCBFdm9sdXRpb24gQVBJIHN0YXR1cyB0byBvdXIgc3RhdHVzIGVudW1cbiAgICAgIGNvbnN0IG1hcHBlZFN0YXR1cyA9IHRoaXMubWFwRXZvbHV0aW9uU3RhdHVzVG9Db25uZWN0aW9uU3RhdHVzKGV2b2x1dGlvblJlc3BvbnNlLmluc3RhbmNlLnN0YXR1cyk7XG5cbiAgICAgIC8vIFN0b3JlIHRoZSBjb21wbGV0ZSBldm9sdXRpb24gcmVzcG9uc2UgZm9yIHJlZmVyZW5jZVxuICAgICAgY29uc3QgZXZvbHV0aW9uRGF0YTogRXZvbHV0aW9uSW5zdGFuY2VEYXRhID0ge1xuICAgICAgICBpbnN0YW5jZU5hbWU6IGV2b2x1dGlvblJlc3BvbnNlLmluc3RhbmNlLmluc3RhbmNlTmFtZSxcbiAgICAgICAgb3duZXI6ICcnLCAvLyBXaWxsIGJlIHBvcHVsYXRlZCB3aGVuIGluc3RhbmNlIGlzIGNvbm5lY3RlZFxuICAgICAgICBzdGF0dXM6IGV2b2x1dGlvblJlc3BvbnNlLmluc3RhbmNlLnN0YXR1cyxcbiAgICAgICAgYXBpa2V5OiBldm9sdXRpb25SZXNwb25zZS5oYXNoPy5hcGlrZXlcbiAgICAgIH07XG4gICAgICBhd2FpdCB0aGlzLndoYXRzYXBwUmVwb3NpdG9yeS51cGRhdGVFdm9sdXRpb25EYXRhKGluc3RhbmNlTmFtZSwgZXZvbHV0aW9uRGF0YSk7XG5cbiAgICAgIC8vIFVwZGF0ZSBzdGF0dXMgc2VwYXJhdGVseSBpZiBuZWVkZWRcbiAgICAgIGlmIChtYXBwZWRTdGF0dXMgIT09ICdwZW5kaW5nJykge1xuICAgICAgICBhd2FpdCB0aGlzLndoYXRzYXBwUmVwb3NpdG9yeS51cGRhdGVTdGF0dXMoaW5zdGFuY2VOYW1lLCBtYXBwZWRTdGF0dXMpO1xuICAgICAgfVxuXG4gICAgICAvLyBHZXQgdXBkYXRlZCBjb25uZWN0aW9uXG4gICAgICBjb25zdCB1cGRhdGVkQ29ubmVjdGlvbiA9IGF3YWl0IHRoaXMud2hhdHNhcHBSZXBvc2l0b3J5LmZpbmRCeUluc3RhbmNlTmFtZShpbnN0YW5jZU5hbWUpO1xuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICBtZXNzYWdlOiAnSW5zdMOibmNpYSBFdm9sdXRpb24gQVBJIGNyaWFkYSBjb20gc3VjZXNzbycsXG4gICAgICAgIGRhdGE6IHVwZGF0ZWRDb25uZWN0aW9uIVxuICAgICAgfTtcblxuICAgIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbiAgICAgIC8vIENsZWFuIHVwIGRhdGFiYXNlIGNvbm5lY3Rpb24gaWYgc29tZXRoaW5nIGZhaWxzXG4gICAgICB0cnkge1xuICAgICAgICBhd2FpdCB0aGlzLndoYXRzYXBwUmVwb3NpdG9yeS5kZWxldGVCeUluc3RhbmNlTmFtZShpbnN0YW5jZU5hbWUpO1xuICAgICAgfSBjYXRjaCAoY2xlYW51cEVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm8gYW8gbGltcGFyIGNvbmV4w6NvIGFww7NzIGZhbGhhOicsIGNsZWFudXBFcnJvcik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBtZXNzYWdlOiAnRXJybyBhbyBpbmljaWFyIGluc3TDom5jaWEgRXZvbHV0aW9uIEFQSScsXG4gICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIGdldENvbm5lY3Rpb25TdGF0dXMoaW5zdGFuY2VOYW1lOiBzdHJpbmcpOiBQcm9taXNlPEFwaVJlc3BvbnNlPENvbm5lY3Rpb25TdGF0dXNSZXNwb25zZT4+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgY29ubmVjdGlvbiA9IGF3YWl0IHRoaXMud2hhdHNhcHBSZXBvc2l0b3J5LmZpbmRCeUluc3RhbmNlTmFtZShpbnN0YW5jZU5hbWUpO1xuICAgICAgXG4gICAgICBpZiAoIWNvbm5lY3Rpb24pIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgICBtZXNzYWdlOiAnQ29uZXjDo28gbsOjbyBlbmNvbnRyYWRhJyxcbiAgICAgICAgICBlcnJvcjogJ0NPTk5FQ1RJT05fTk9UX0ZPVU5EJ1xuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpO1xuICAgICAgY29uc3QgZXhwaXJlc0F0ID0gbmV3IERhdGUoY29ubmVjdGlvbi5leHBpcmVzX2F0KTtcbiAgICAgIGNvbnN0IGNyZWF0ZWRBdCA9IG5ldyBEYXRlKGNvbm5lY3Rpb24uY3JlYXRlZF9hdCk7XG4gICAgICBjb25zdCBjb25uZWN0aW9uRHVyYXRpb24gPSBub3cuZ2V0VGltZSgpIC0gY3JlYXRlZEF0LmdldFRpbWUoKTtcbiAgICAgIGNvbnN0IG1heEF0dGVtcHRzID0gNTtcblxuICAgICAgLy8gQ2hlY2sgaWYgZXhwaXJlZFxuICAgICAgaWYgKG5vdyA+IGV4cGlyZXNBdCAmJiBjb25uZWN0aW9uLnN0YXR1cyA9PT0gJ3BlbmRpbmcnKSB7XG4gICAgICAgIGF3YWl0IHRoaXMud2hhdHNhcHBSZXBvc2l0b3J5LnVwZGF0ZVN0YXR1cyhpbnN0YW5jZU5hbWUsICdleHBpcmVkJyk7XG4gICAgICAgIGNvbm5lY3Rpb24uc3RhdHVzID0gJ2V4cGlyZWQnO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBzdGF0dXNSZXNwb25zZTogQ29ubmVjdGlvblN0YXR1c1Jlc3BvbnNlID0ge1xuICAgICAgICBxckNvZGU6IGNvbm5lY3Rpb24ucXJfY29kZSB8fCBudWxsLFxuICAgICAgICBzdGF0dXM6IGNvbm5lY3Rpb24uc3RhdHVzIGFzICdlcnJvcicgfCAncGVuZGluZycgfCAnY29ubmVjdGVkJyB8ICdleHBpcmVkJyxcbiAgICAgICAgbGFzdFVwZGF0ZWQ6IGNvbm5lY3Rpb24ubGFzdF91cGRhdGVkLFxuICAgICAgICBjb25uZWN0aW9uRHVyYXRpb24sXG4gICAgICAgIHBob25lTnVtYmVyOiBjb25uZWN0aW9uLnBob25lX251bWJlcixcbiAgICAgICAgcHJvZmlsZU5hbWU6IGNvbm5lY3Rpb24uZXZvbHV0aW9uX2luc3RhbmNlX2RhdGE/LnByb2ZpbGVOYW1lLFxuICAgICAgICBleHBpcmVzQXQ6IGNvbm5lY3Rpb24uZXhwaXJlc19hdCxcbiAgICAgICAgYXR0ZW1wdHNSZW1haW5pbmc6IE1hdGgubWF4KDAsIG1heEF0dGVtcHRzIC0gY29ubmVjdGlvbi5jb25uZWN0aW9uX2F0dGVtcHRzKVxuICAgICAgfTtcblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgbWVzc2FnZTogJ1N0YXR1cyBkYSBjb25leMOjbyByZWN1cGVyYWRvJyxcbiAgICAgICAgZGF0YTogc3RhdHVzUmVzcG9uc2VcbiAgICAgIH07XG5cbiAgICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgbWVzc2FnZTogJ0Vycm8gYW8gYnVzY2FyIHN0YXR1cyBkYSBjb25leMOjbycsXG4gICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIGdldENvbm5lY3Rpb25zQnlVc2VyKHVzZXJJZDogc3RyaW5nKTogUHJvbWlzZTxBcGlSZXNwb25zZTxXaGF0c0FwcENvbm5lY3Rpb25bXT4+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgY29ubmVjdGlvbnMgPSBhd2FpdCB0aGlzLndoYXRzYXBwUmVwb3NpdG9yeS5maW5kQnlVc2VySWQodXNlcklkKTtcblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgbWVzc2FnZTogJ0NvbmV4w7VlcyBkbyB1c3XDoXJpbyByZWN1cGVyYWRhcycsXG4gICAgICAgIGRhdGE6IGNvbm5lY3Rpb25zXG4gICAgICB9O1xuICAgIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBtZXNzYWdlOiAnRXJybyBhbyBidXNjYXIgY29uZXjDtWVzIGRvIHVzdcOhcmlvJyxcbiAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2VcbiAgICAgIH07XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgZGVsZXRlQ29ubmVjdGlvbihpbnN0YW5jZU5hbWU6IHN0cmluZyk6IFByb21pc2U8QXBpUmVzcG9uc2U8dm9pZD4+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgY29ubmVjdGlvbiA9IGF3YWl0IHRoaXMud2hhdHNhcHBSZXBvc2l0b3J5LmZpbmRCeUluc3RhbmNlTmFtZShpbnN0YW5jZU5hbWUpO1xuICAgICAgXG4gICAgICBpZiAoIWNvbm5lY3Rpb24pIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgICBtZXNzYWdlOiAnQ29uZXjDo28gbsOjbyBlbmNvbnRyYWRhJyxcbiAgICAgICAgICBlcnJvcjogJ0NPTk5FQ1RJT05fTk9UX0ZPVU5EJ1xuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICAvLyBUcnkgdG8gZGVsZXRlIGZyb20gRXZvbHV0aW9uIEFQSVxuICAgICAgdHJ5IHtcbiAgICAgICAgYXdhaXQgZmV0Y2goYCR7dGhpcy5ldm9sdXRpb25BcGlVcmx9L2luc3RhbmNlL2RlbGV0ZS8ke2luc3RhbmNlTmFtZX1gLCB7XG4gICAgICAgICAgbWV0aG9kOiAnREVMRVRFJyxcbiAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAnYXBpa2V5JzogdGhpcy5ldm9sdXRpb25BcGlLZXlcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSBjYXRjaCAoZXZvbHV0aW9uRXJyb3IpIHtcbiAgICAgICAgY29uc29sZS53YXJuKCdFcnJvIGFvIGRlbGV0YXIgaW5zdMOibmNpYSBkYSBFdm9sdXRpb24gQVBJOicsIGV2b2x1dGlvbkVycm9yKTtcbiAgICAgICAgLy8gQ29udGludWUgd2l0aCBkYXRhYmFzZSBkZWxldGlvbiBldmVuIGlmIEV2b2x1dGlvbiBBUEkgZmFpbHNcbiAgICAgIH1cblxuICAgICAgLy8gVXBkYXRlIGFnZW50IGlmIGNvbm5lY3RlZFxuICAgICAgaWYgKGNvbm5lY3Rpb24uYWdlbnRfaWQgJiYgY29ubmVjdGlvbi5zdGF0dXMgPT09ICdjb25uZWN0ZWQnKSB7XG4gICAgICAgIC8vIFRoaXMgd291bGQgbmVlZCB0byBiZSBkb25lIHRocm91Z2ggdGhlIGFnZW50IHNlcnZpY2UvcmVwb3NpdG9yeVxuICAgICAgICAvLyBGb3Igbm93LCB3ZSdsbCB1cGRhdGUgZGlyZWN0bHkgKG5vdCBpZGVhbCBidXQgZnVuY3Rpb25hbClcbiAgICAgICAgY29uc3Qgc3VwYWJhc2UgPSByZXF1aXJlKCdAL2xpYi9kYXRhYmFzZScpLmRhdGFiYXNlU2VydmljZS5nZXRDbGllbnQoKTtcbiAgICAgICAgYXdhaXQgc3VwYWJhc2VcbiAgICAgICAgICAuZnJvbSgnYWdlbnRlJylcbiAgICAgICAgICAudXBkYXRlKHtcbiAgICAgICAgICAgIHdoYXRzYXBwX2NvbmVjdGFkbzogZmFsc2UsXG4gICAgICAgICAgICB3aGF0c2FwcF9udW1lcm86IG51bGxcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5lcSgnaWQnLCBjb25uZWN0aW9uLmFnZW50X2lkKTtcbiAgICAgIH1cblxuICAgICAgLy8gRGVsZXRlIGZyb20gZGF0YWJhc2VcbiAgICAgIGF3YWl0IHRoaXMud2hhdHNhcHBSZXBvc2l0b3J5LmRlbGV0ZUJ5SW5zdGFuY2VOYW1lKGluc3RhbmNlTmFtZSk7XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgIG1lc3NhZ2U6ICdDb25leMOjbyBkZWxldGFkYSBjb20gc3VjZXNzbydcbiAgICAgIH07XG5cbiAgICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgbWVzc2FnZTogJ0Vycm8gYW8gZGVsZXRhciBjb25leMOjbycsXG4gICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIHByb2Nlc3NXZWJob29rRXZlbnQoaW5zdGFuY2VOYW1lOiBzdHJpbmcsIGV2ZW50OiBhbnkpOiBQcm9taXNlPEFwaVJlc3BvbnNlPHZvaWQ+PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGNvbm5lY3Rpb24gPSBhd2FpdCB0aGlzLndoYXRzYXBwUmVwb3NpdG9yeS5maW5kQnlJbnN0YW5jZU5hbWUoaW5zdGFuY2VOYW1lKTtcbiAgICAgIFxuICAgICAgaWYgKCFjb25uZWN0aW9uKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgbWVzc2FnZTogJ0NvbmV4w6NvIG7Do28gZW5jb250cmFkYSBwYXJhIG8gd2ViaG9vaycsXG4gICAgICAgICAgZXJyb3I6ICdDT05ORUNUSU9OX05PVF9GT1VORCdcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgY29uc29sZS5sb2coYFByb2Nlc3Npbmcgd2ViaG9vayBldmVudDogJHtldmVudC5ldmVudH0gZm9yIGluc3RhbmNlOiAke2luc3RhbmNlTmFtZX1gKTtcblxuICAgICAgc3dpdGNoIChldmVudC5ldmVudCkge1xuICAgICAgICBjYXNlICdRUkNPREVfVVBEQVRFRCc6XG4gICAgICAgICAgaWYgKGV2ZW50LmRhdGE/LnFyY29kZT8uYmFzZTY0KSB7XG4gICAgICAgICAgICBhd2FpdCB0aGlzLndoYXRzYXBwUmVwb3NpdG9yeS51cGRhdGVRckNvZGUoaW5zdGFuY2VOYW1lLCBldmVudC5kYXRhLnFyY29kZS5iYXNlNjQpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coYFFSIENvZGUgdXBkYXRlZCBmb3IgaW5zdGFuY2U6ICR7aW5zdGFuY2VOYW1lfWApO1xuICAgICAgICAgIH1cbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlICdDT05ORUNUSU9OX1VQREFURSc6XG4gICAgICAgICAgaWYgKGV2ZW50LmRhdGE/LnN0YXRlKSB7XG4gICAgICAgICAgICBjb25zdCBzdGF0ZSA9IGV2ZW50LmRhdGEuc3RhdGUudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICAgIGNvbnN0IG1hcHBlZFN0YXR1cyA9IHRoaXMubWFwRXZvbHV0aW9uU3RhdHVzVG9Db25uZWN0aW9uU3RhdHVzKHN0YXRlKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gSWYgY29ubmVjdGVkIGFuZCB3ZSBoYXZlIHBob25lIGluZm8sIHVwZGF0ZSBwaG9uZSBjb25uZWN0aW9uXG4gICAgICAgICAgICBpZiAobWFwcGVkU3RhdHVzID09PSAnY29ubmVjdGVkJyAmJiBldmVudC5kYXRhPy5waG9uZT8ubnVtYmVyKSB7XG4gICAgICAgICAgICAgIGF3YWl0IHRoaXMud2hhdHNhcHBSZXBvc2l0b3J5LnVwZGF0ZVBob25lQ29ubmVjdGlvbihcbiAgICAgICAgICAgICAgICBpbnN0YW5jZU5hbWUsXG4gICAgICAgICAgICAgICAgZXZlbnQuZGF0YS5waG9uZS5udW1iZXIsXG4gICAgICAgICAgICAgICAgZXZlbnQuZGF0YS5waG9uZS5wdXNoTmFtZVxuICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgV2hhdHNBcHAgY29ubmVjdGVkIGZvciBpbnN0YW5jZTogJHtpbnN0YW5jZU5hbWV9LCBwaG9uZTogJHtldmVudC5kYXRhLnBob25lLm51bWJlcn1gKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGF3YWl0IHRoaXMud2hhdHNhcHBSZXBvc2l0b3J5LnVwZGF0ZVN0YXR1cyhpbnN0YW5jZU5hbWUsIG1hcHBlZFN0YXR1cyk7XG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKGBDb25uZWN0aW9uIHN0YXRlIGNoYW5nZWQgZm9yIGluc3RhbmNlOiAke2luc3RhbmNlTmFtZX0sIHN0YXRlOiAke3N0YXRlfSwgbWFwcGVkOiAke21hcHBlZFN0YXR1c31gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSAnTUVTU0FHRVNfVVBTRVJUJzpcbiAgICAgICAgICAvLyBIYW5kbGUgaW5jb21pbmcgbWVzc2FnZXMgaWYgbmVlZGVkIGZvciBjaGF0IGZ1bmN0aW9uYWxpdHlcbiAgICAgICAgICBjb25zb2xlLmxvZyhgTWVzc2FnZSByZWNlaXZlZCBmb3IgaW5zdGFuY2U6ICR7aW5zdGFuY2VOYW1lfWApO1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgY29uc29sZS5sb2coYFVuaGFuZGxlZCB3ZWJob29rIGV2ZW50OiAke2V2ZW50LmV2ZW50fSBmb3IgaW5zdGFuY2U6ICR7aW5zdGFuY2VOYW1lfWApO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICBtZXNzYWdlOiAnRXZlbnRvIGRvIHdlYmhvb2sgcHJvY2Vzc2FkbyBjb20gc3VjZXNzbydcbiAgICAgIH07XG5cbiAgICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvIGFvIHByb2Nlc3NhciBldmVudG8gZG8gd2ViaG9vazonLCBlcnJvcik7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgbWVzc2FnZTogJ0Vycm8gYW8gcHJvY2Vzc2FyIGV2ZW50byBkbyB3ZWJob29rJyxcbiAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2VcbiAgICAgIH07XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgY2hlY2tJbnN0YW5jZVN0YXR1cyhpbnN0YW5jZU5hbWU6IHN0cmluZyk6IFByb21pc2U8QXBpUmVzcG9uc2U8RXZvbHV0aW9uSW5zdGFuY2VTdGF0dXM+PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYCR7dGhpcy5ldm9sdXRpb25BcGlVcmx9L2luc3RhbmNlL2ZldGNoSW5zdGFuY2VzLyR7aW5zdGFuY2VOYW1lfWAsIHtcbiAgICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICdhcGlrZXknOiB0aGlzLmV2b2x1dGlvbkFwaUtleVxuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICBjb25zdCBlcnJvckRhdGE6IEV2b2x1dGlvbkFwaUVycm9yID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgIG1lc3NhZ2U6IGBFcnJvIG5hIEV2b2x1dGlvbiBBUEk6ICR7ZXJyb3JEYXRhLm1lc3NhZ2V9YCxcbiAgICAgICAgICBlcnJvcjogZXJyb3JEYXRhLmVycm9yXG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHN0YXR1czogRXZvbHV0aW9uSW5zdGFuY2VTdGF0dXMgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgIG1lc3NhZ2U6ICdTdGF0dXMgZGEgaW5zdMOibmNpYSByZWN1cGVyYWRvJyxcbiAgICAgICAgZGF0YTogc3RhdHVzXG4gICAgICB9O1xuXG4gICAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIG1lc3NhZ2U6ICdFcnJvIGFvIHZlcmlmaWNhciBzdGF0dXMgZGEgaW5zdMOibmNpYScsXG4gICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIGNsZWFudXBFeHBpcmVkQ29ubmVjdGlvbnMoKTogUHJvbWlzZTxBcGlSZXNwb25zZTxudW1iZXI+PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGNsZWFuZWRDb3VudCA9IGF3YWl0IHRoaXMud2hhdHNhcHBSZXBvc2l0b3J5LmNsZWFudXBFeHBpcmVkKCk7XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgIG1lc3NhZ2U6IGAke2NsZWFuZWRDb3VudH0gY29uZXjDtWVzIGV4cGlyYWRhcyByZW1vdmlkYXNgLFxuICAgICAgICBkYXRhOiBjbGVhbmVkQ291bnRcbiAgICAgIH07XG4gICAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIG1lc3NhZ2U6ICdFcnJvIGFvIGxpbXBhciBjb25leMO1ZXMgZXhwaXJhZGFzJyxcbiAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2VcbiAgICAgIH07XG4gICAgfVxuICB9XG59XG5cbi8vIEZhY3RvcnkgZnVuY3Rpb25cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVXaGF0c0FwcENvbm5lY3Rpb25TZXJ2aWNlKCk6IElXaGF0c0FwcENvbm5lY3Rpb25TZXJ2aWNlIHtcbiAgY29uc3Qgd2hhdHNhcHBSZXBvc2l0b3J5ID0gbmV3IFdoYXRzQXBwQ29ubmVjdGlvblJlcG9zaXRvcnkoKTtcbiAgcmV0dXJuIG5ldyBXaGF0c0FwcENvbm5lY3Rpb25TZXJ2aWNlKHdoYXRzYXBwUmVwb3NpdG9yeSk7XG59Il0sIm5hbWVzIjpbIldoYXRzQXBwQ29ubmVjdGlvblJlcG9zaXRvcnkiLCJXaGF0c0FwcENvbm5lY3Rpb25TZXJ2aWNlIiwiY29uc3RydWN0b3IiLCJ3aGF0c2FwcFJlcG9zaXRvcnkiLCJldm9sdXRpb25BcGlVcmwiLCJwcm9jZXNzIiwiZW52IiwiRVZPTFVUSU9OX0FQSV9VUkwiLCJldm9sdXRpb25BcGlLZXkiLCJFVk9MVVRJT05fQVBJX0tFWSIsIm1hcEV2b2x1dGlvblN0YXR1c1RvQ29ubmVjdGlvblN0YXR1cyIsImV2b2x1dGlvblN0YXR1cyIsInN0YXR1cyIsInRvTG93ZXJDYXNlIiwiY3JlYXRlQ29ubmVjdGlvbiIsImRhdGEiLCJleGlzdGluZ0Nvbm5lY3Rpb24iLCJmaW5kQnlJbnN0YW5jZU5hbWUiLCJpbnN0YW5jZV9uYW1lIiwic3VjY2VzcyIsIm1lc3NhZ2UiLCJlcnJvciIsImNvbm5lY3Rpb24iLCJjcmVhdGUiLCJpbml0aWF0ZUV2b2x1dGlvbkluc3RhbmNlIiwiaW5zdGFuY2VOYW1lIiwidXNlcklkIiwiYWdlbnRJZCIsImFnZW50VHlwZSIsImNvbnNvbGUiLCJsb2ciLCJzdXBhYmFzZSIsInJlcXVpcmUiLCJkYXRhYmFzZVNlcnZpY2UiLCJnZXRDbGllbnQiLCJ3ZWJob29rUm93cyIsIndlYmhvb2tFcnJvciIsImZyb20iLCJzZWxlY3QiLCJlcSIsImxpbWl0Iiwic2luZ2xlIiwidXJsIiwid2ViaG9va1VybCIsImNvbm5lY3Rpb25SZXN1bHQiLCJ1c2VyX2lkIiwiYWdlbnRfaWQiLCJ1bmRlZmluZWQiLCJ3ZWJob29rX3VybCIsImV2b2x1dGlvblJlcXVlc3QiLCJxcmNvZGUiLCJpbnRlZ3JhdGlvbiIsIndlYmhvb2siLCJiYXNlNjQiLCJoZWFkZXJzIiwiZXZlbnRzIiwibGVuZ3RoIiwicmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5Iiwib2siLCJlcnJvclRleHQiLCJ0ZXh0IiwiZXJyb3JEYXRhIiwicGFyc2UiLCJzdGF0dXNDb2RlIiwiZGVsZXRlQnlJbnN0YW5jZU5hbWUiLCJldm9sdXRpb25SZXNwb25zZSIsImpzb24iLCJ1cGRhdGVRckNvZGUiLCJtYXBwZWRTdGF0dXMiLCJpbnN0YW5jZSIsImV2b2x1dGlvbkRhdGEiLCJvd25lciIsImFwaWtleSIsImhhc2giLCJ1cGRhdGVFdm9sdXRpb25EYXRhIiwidXBkYXRlU3RhdHVzIiwidXBkYXRlZENvbm5lY3Rpb24iLCJjbGVhbnVwRXJyb3IiLCJnZXRDb25uZWN0aW9uU3RhdHVzIiwibm93IiwiRGF0ZSIsImV4cGlyZXNBdCIsImV4cGlyZXNfYXQiLCJjcmVhdGVkQXQiLCJjcmVhdGVkX2F0IiwiY29ubmVjdGlvbkR1cmF0aW9uIiwiZ2V0VGltZSIsIm1heEF0dGVtcHRzIiwic3RhdHVzUmVzcG9uc2UiLCJxckNvZGUiLCJxcl9jb2RlIiwibGFzdFVwZGF0ZWQiLCJsYXN0X3VwZGF0ZWQiLCJwaG9uZU51bWJlciIsInBob25lX251bWJlciIsInByb2ZpbGVOYW1lIiwiZXZvbHV0aW9uX2luc3RhbmNlX2RhdGEiLCJhdHRlbXB0c1JlbWFpbmluZyIsIk1hdGgiLCJtYXgiLCJjb25uZWN0aW9uX2F0dGVtcHRzIiwiZ2V0Q29ubmVjdGlvbnNCeVVzZXIiLCJjb25uZWN0aW9ucyIsImZpbmRCeVVzZXJJZCIsImRlbGV0ZUNvbm5lY3Rpb24iLCJldm9sdXRpb25FcnJvciIsIndhcm4iLCJ1cGRhdGUiLCJ3aGF0c2FwcF9jb25lY3RhZG8iLCJ3aGF0c2FwcF9udW1lcm8iLCJwcm9jZXNzV2ViaG9va0V2ZW50IiwiZXZlbnQiLCJzdGF0ZSIsInBob25lIiwibnVtYmVyIiwidXBkYXRlUGhvbmVDb25uZWN0aW9uIiwicHVzaE5hbWUiLCJjaGVja0luc3RhbmNlU3RhdHVzIiwiY2xlYW51cEV4cGlyZWRDb25uZWN0aW9ucyIsImNsZWFuZWRDb3VudCIsImNsZWFudXBFeHBpcmVkIiwiY3JlYXRlV2hhdHNBcHBDb25uZWN0aW9uU2VydmljZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/services/whatsapp-connection.service.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/next","vendor-chunks/ws","vendor-chunks/semver","vendor-chunks/whatwg-url","vendor-chunks/jsonwebtoken","vendor-chunks/lodash.includes","vendor-chunks/jws","vendor-chunks/lodash.once","vendor-chunks/jwa","vendor-chunks/lodash.isinteger","vendor-chunks/ecdsa-sig-formatter","vendor-chunks/webidl-conversions","vendor-chunks/lodash.isplainobject","vendor-chunks/ms","vendor-chunks/lodash.isstring","vendor-chunks/lodash.isnumber","vendor-chunks/lodash.isboolean","vendor-chunks/safe-buffer","vendor-chunks/buffer-equal-constant-time","vendor-chunks/isows"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fevolution%2Fcreate-instance%2Froute&page=%2Fapi%2Fevolution%2Fcreate-instance%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fevolution%2Fcreate-instance%2Froute.ts&appDir=%2FUsers%2Fpedrotorrezani%2FDocuments%2FProgramacao%2Fatlas%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fpedrotorrezani%2FDocuments%2FProgramacao%2Fatlas&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();